{"version":3,"sources":["CommSpec.js","data.js","CommSpecComponent.js","DeviceSpecPopup.js","EquipManage.js","TestSpec.js","TestSpecPopup.js","TestSpecListPopup.js","ExcuteTest.js","SequenceManage.js","Router.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["item","name","mo","CommSpec","addOuter","cmspc","json","getCommSpec","cls","type","subtype","read","write","items","push","operationSpec","Class","Type","Operations","Operation","Value","Parameters","Parameter","MO","deviceClasses","deviceTypes","node","sensor","actuator","misc","getDeviceTypes","deviceClass","key","replace","rslt","undefined","deviceSubTypes","sensor_node","actuator_node","integrated_node","retractable","switch","nutrient_supply","getDeviceSubTypes","deviceType","valueUnit","value","sd","getCommSpecItems","spec","getLastSubtype","fulltype","String","indexOf","split","subs","length","getCommSpecItemsFull","map","getCommSpecOperation","i","op","getCommSpecOperationFull","placeholder","document","createElement","className","CommSpecComponebt","props","state","readStartingRegister","writeStartingRegister","readItems","writeItems","savedCommSpec","refresh","updateCommSpec","commSpec","setState","matchCommSpec","onChanged","setCommSpec","readitem","writeitem","idx","readStartingVal","val","target","parsed","parseInt","writeStartingVal","optionBtn","dragStart","e","dragged","currentTarget","style","backgroundColor","parentNode","appendChild","dragOver","preventDefault","tagName","over","insertBefore","readDragEnd","dragEnd","writeDragEnd","removeChild","dataset","id","from","Number","to","splice","result","this","prevProps","width","marginLeft","marginRight","margin","height","marginTop","onChange","onDragOver","data-id","draggable","onDragStart","onDragEnd","float","icon","onClick","size","variant","Component","DeviceSpecPopup","files","selectFile","fileJson","addDeviceMessage","errorMsg","class","canModify","canLoad","setClass","getFiles","fetch","headers","method","then","res","alert","errormsg","error","onListSelect","file","window","onFilesUnload","onAddDevice","toastBL","show","severity","detail","life","onRemoveFile","onModify","onLoad","onDownload","blob","Blob","JSON","stringify","saveAs","onUpload","modify","load","onUnload","center","title","features","label","paddingRight","header","minWidth","textAlign","marginBottom","fontSize","padding","mode","url","accept","maxFileSize","auto","chooseLabel","multiple","ref","el","position","EquipManage","showFiles","model","valueunit","valueunitetc","channel","deviceSpecName","saveAlert","saveResult","saveErrorMessage","overwrite","overwriteMessage","addDeviceList","setModel","getElementById","setName","setChannel","setValueUnitEtc","setDeviceSpecName","setSaveMsg","msg","overwriteClick","saveClick","onShowFiles","setJson","onCommSpecChange","csCmpRef","current","dvcPopRef","types","Model","Name","ValueUnit","ValueType","SignificantDigit","console","log","Channel","Devices","dvclist","dvc","summary","onRemoveFromDeviceList","event","overwriteConfirm","message","acceptLabel","rejectLabel","reject","body","getJson","confirmPopup","isSensor","chn","isNaN","cs","Object","keys","devices","React","createRef","onKeyUp","options","Data","htmlFor","optionLabel","optionValue","TestSpec","command","device","deviceList","operations","targets","operation","devicespec","setDeviceSpec","deviceSpec","full","equals","it","getParameter","ops","param","getTarget","tgs","tg","getExpect","onCreate","doc","divRef","ownerDocument","parameters","j","par","assign","tgsstr","checked","time","TestSpecPopup","testRef","TestSpecListPopup","fileData","data","ExcuteTest","selectDevice","slaveList","selectSlave","invalidDevice","imageURL","imageURLDetail","isLoading","testSpec","setSpec","test","getSerialport","ports","onChangeDevice","onChangeSlave","unload","startTest","path","slave","urldetail","sl","alt","src","SequenceManage","showTestFiles","loadJson","loadFile","showCreate","showTest","tests","rowSelected","onShowTestFiles","onTestLoad","datas","trim","onCreateTest","testPopRef","toastTL","getTestSpec","testSpecName","cmd","paramstr","testClick","toastBR","excuteTestRef","testUnload","onRowReorder","mvitem","mvid","dropIndex","onSelectCopy","onSelectDelete","testEditor","rowData","onEditorValueChange","rowIndex","testListRef","editMode","selectionMode","dataKey","selection","onSelectionChange","rowReorder","columnKey","field","editor","Router","exact","component","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","App","Header","x","y","constructor","p","hasOwnProperty","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7ee457cd.chunk.js","sourcesContent":["function item(name, mo = \"m\") {\n    return {item:name, mo:mo};\n}\n\nconst CommSpec = {\n    addOuter: function(cmspc) {\n        let json = {};\n        json[\"KS-X-3267:2021\"] = cmspc;\n        return json;\n    },\n/*\n    getCommSpecJson: function(cls, type, subtype) {\n        var json = {};\n        var read = {};\n        var write = null;\n\n        if  (cls === \"node\") {\n            read[\"starting-register\"] = 201;\n\n            read.items = [\n                \"status\"\n            ];\n\n            if (subtype === \"level0\") {\n                write = null;\n            } else if (subtype !== \"level0\" && subtype !== null) {\n                read.items.push(\"opid\");\n                read.items.push(\"control\");\n                \n                write = {};\n                write[\"starting-register\"] = 301;\n                write.items = [\"operation\", \"opid\"];\n\n                if (subtype === \"level2\") {\n                    \n                    write.items.push(\"control\");\n                }\n            }\n        }\n\n        if  (cls === \"sensor\") {\n\n            if (type === \"temperature-sensor\")\n                read[\"starting-register\"] = 202;\n            else if (type === \"humidity-sensor\")\n                read[\"starting-register\"] = 205;\n            else if (type === \"CO2-sensor\")\n                read[\"starting-register\"] = 208;\n            else if (type === \"pyranometer-sensor\")\n                read[\"starting-register\"] = 211;\n            else if (type === \"wind-direction-sensor\")\n                read[\"starting-register\"] = 214;\n            else if (type === \"wind-speed-sensor\")\n                read[\"starting-register\"] = 217;\n            else if (type === \"rain-detector-sensor\")\n                read[\"starting-register\"] = 220;\n            else if (type === \"quantum-sensor\")\n                read[\"starting-register\"] = 223;\n            else if (type === \"soil-moisture-sensor\")\n                read[\"starting-register\"] = 226;\n            else if (type === \"tensiometer-sensor\")\n                read[\"starting-register\"] = 229;\n            else if (type === \"EC-sensor\")\n                read[\"starting-register\"] = 232;\n            else if (type === \"pH-sensor\")\n                read[\"starting-register\"] = 235;\n            else if (type === \"soil-temperature-sensor\")\n                read[\"starting-register\"] = 238;\n            else if (type === \"flow-sensor\")\n                read[\"starting-register\"] = 241;\n            else if (type === \"voltage-sensor\")\n                read[\"starting-register\"] = 244;\n            else if (type === \"current-sensor\")\n                read[\"starting-register\"] = 247;\n\n            read.items = [\n                \"value\",\n                \"status\",\n            ];\n        }\n\n        if  (cls === \"actuator\") {\n            read[\"starting-register\"] = 208;\n\n            if (type === \"retractable\") {\n                read.items = [\n                    \"status\"\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [\"operation\", \"opid\"];\n                } else if (subtype === \"level1\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"position\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [\"operation\", \"opid\", \"time\"];\n                } else if (subtype === \"level2\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"position\");\n                    read.items.push(\"remain-time\");\n                    read.items.push(\"opentime\");\n                    read.items.push(\"closetime\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        \"operation\", \n                        \"opid\", \n                        \"time\",\n                        \"position\",\n                        \"opentime\",\n                        \"closetime\"\n                    ];\n                }\n            } else if (type === \"switch\") {\n                read.items = [\n                    \"status\"\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\"operation\", \"opid\"];\n                } else if (subtype === \"level1\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\"operation\", \"opid\", \"hold-time\"];\n                } else if (subtype === \"level2\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"ratio\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        \"operation\", \n                        \"opid\", \n                        \"hold-time\",\n                        \"ratio\"\n                    ];\n                }\n            } else if (type === \"nutrient-supply\") {\n                read.items = [\n                    \"opid\",\n                    \"status\",\n                    \"area\",\n                    \"alert\"\n                ];\n\n                write = {};\n                write[\"starting-register\"] = 311;\n                write.items = [\n                    \"operation\", \n                    \"opid\", \n                    \"control\",\n                ];\n\n                if (subtype === \"level1\") {\n                    write.items.push(\"EC\");\n                    write.items.push(\"pH\");\n                    write.items.push(\"on-sec\");\n                    write.items.push(\"start-area\");\n                    write.items.push(\"stop-area\");\n                }\n            }\n        }\n\n        if (cls === \"misc\") {\n            if (type === \"display\") {\n                read[\"starting-register\"] = 301;\n                read.items = [\n                    \"opid\",\n                    \"status\"\n                ];\n                \n                write = {};\n                write[\"starting-register\"] = 401;\n                write.items = [\n                    \"operation\", \n                    \"opid\",\n                    \"epoch\",\n                    \"vfloat\",\n                    \"vfloat\",\n                    \"vint\",\n                    \"vint\"\n                ];\n            } else {\n                read = null;\n            }\n            \n        }\n\n        if (read !== null)\n            json.read = read;\n        if (write !== null)\n            json.write = write;\n\n        return this.addOuter(json);\n    },\n*/\n    getCommSpec: function(cls, type, subtype) {\n        let json = {};\n        let read = {};\n        let write = null;\n\n        if (cls === null || type === null) return null;\n\n        if  (cls === \"node\") {\n            read[\"starting-register\"] = 201;\n\n            read.items = [\n                item(\"status\")\n            ];\n\n            if (subtype === \"level0\") {\n                write = null;\n            } else if (subtype === \"level1\") {\n                read.items.push(item(\"opid\"));\n                read.items.push(item(\"control\"));\n                \n                write = {};\n                write[\"starting-register\"] = 301;\n                write.items = [item(\"operation\"), item(\"opid\"), item(\"control\")];\n            }\n        }\n\n        if  (cls === \"sensor\") {\n            if (type === \"temperature-sensor\")\n                read[\"starting-register\"] = 202;\n            else if (type === \"dewpoint-sensor\")\n                read[\"starting-register\"] = 202;\n            else if (type === \"humidity-sensor\")\n                read[\"starting-register\"] = 205;\n            else if (type === \"CO2-sensor\")\n                read[\"starting-register\"] = 208;\n            else if (type === \"pyranometer\")\n                read[\"starting-register\"] = 211;\n            else if (type === \"wind-direction-sensor\")\n                read[\"starting-register\"] = 214;\n            else if (type === \"wind-speed-sensor\")\n                read[\"starting-register\"] = 217;\n            else if (type === \"rain-detector\")\n                read[\"starting-register\"] = 220;\n            else if (type === \"quantum-sensor\")\n                read[\"starting-register\"] = 223;\n            else if (type === \"soil-moisture-sensor\")\n                read[\"starting-register\"] = 226;\n            else if (type === \"tensiometer\")\n                read[\"starting-register\"] = 229;\n            else if (type === \"EC-sensor\")\n                read[\"starting-register\"] = 232;\n            else if (type === \"pH-sensor\")\n                read[\"starting-register\"] = 235;\n            else if (type === \"soil-temperature-sensor\")\n                read[\"starting-register\"] = 238;\n            else if (type === \"flow-sensor\")\n                read[\"starting-register\"] = 241;\n            else if (type === \"voltage-sensor\")\n                read[\"starting-register\"] = 244;\n            else if (type === \"current-sensor\")\n                read[\"starting-register\"] = 247;\n\n            read.items = [\n                item(\"value\"),\n                item(\"status\"),\n            ];\n        }\n\n        if  (cls === \"actuator\") {\n            read[\"starting-register\"] = 208;\n\n            if (type === \"retractable\") {\n                read.items = [\n                    item(\"status\"),\n                ];\n\n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [item(\"operation\")];\n                } else if (subtype === \"level1\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"position\", \"o\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [item(\"operation\"), item(\"opid\"), item(\"time\")];\n                } else if (subtype === \"level2\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"position\"));\n                    read.items.push(item(\"remain-time\"));\n                    read.items.push(item(\"opentime\"));\n                    read.items.push(item(\"closetime\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"), \n                        item(\"opid\"), \n                        item(\"time\"),\n                        item(\"position\"),\n                        item(\"opentime\"),\n                        item(\"closetime\")\n                    ];\n                }\n            } else if (type === \"switch\") {\n                read.items = [\n                    item(\"opid\"),\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [item(\"operation\")];\n                } else if (subtype === \"level1\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [item(\"operation\"), item(\"opid\"), item(\"hold-time\")];\n                } else if (subtype === \"level2\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"ratio\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"), \n                        item(\"opid\"), \n                        item(\"hold-time\"),\n                        item(\"ratio\")\n                    ];\n                }\n            } else if (type === \"nutrient-supply\") {\n                read.items = [\n                    item(\"status\"),\n                    item(\"area\"),\n                    item(\"alert\"),\n                ];\n\n                if (subtype !== \"level0\" && subtype != null) {\n                    read.items.push(item(\"opid\"));\n\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"),\n                        item(\"opid\"),\n                    ];\n                }\n\n                if (subtype === \"level2\") {\n                    write.items.push(item(\"on-sec\"));\n                    write.items.push(item(\"start-area\"));\n                    write.items.push(item(\"stop-area\"));\n                } else if (subtype === \"level3\") {\n                    write.items.push(item(\"on-sec\"));\n                    write.items.push(item(\"start-area\"));\n                    write.items.push(item(\"stop-area\"));\n                    write.items.push(item(\"EC\"));\n                    write.items.push(item(\"pH\"));\n                }\n            }\n        }\n\n        if (cls === \"misc\") {\n            if (type === \"display\") {\n                read[\"starting-register\"] = 301;\n                read.items = [\n                    item(\"status\"),\n                    item(\"opid\")\n                ];\n                \n                write = {};\n                write[\"starting-register\"] = 401;\n                write.items = [\n                    item(\"operation\"), \n                    item(\"opid\"),\n                    item(\"epoch\"),\n                    item(\"vfloat\"),\n                    item(\"vint\")\n                ];\n            } else {\n                read = null;\n            }\n            \n        }\n\n        if (read !== null)\n            json.read = read;\n        if (write !== null)\n            json.write = write;\n\n        return json;\n    },\n}\n\nexport default CommSpec;","import CommSpec from './CommSpec';\n\nexport const commSpecVer = \"KS-X-3267:2021\";\n\nexport const operationSpec = [\n    {\n        Class:\"node\",\n        Type:\"sensor-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"actuator-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"actuator-node/level2\",\n        Operations:[\n            {Operation:\"reset\", Value:1},\n            {Operation:\"control\", Value:2, Parameters:[{Parameter:\"control\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"node\",\n        Type:\"integrated-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"integrated-node/level2\",\n        Operations:[\n            {Operation:\"reset\", Value:1},\n            {Operation:\"control\", Value:2, Parameters:[{Parameter:\"control\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level0\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level1\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n            {Operation:\"timed-open\", Value:303, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"timed-close\", Value:304, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level2\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n            {Operation:\"timed-open\", Value:303, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"timed-close\", Value:304, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"set-position\", Value:305, Parameters:[{Parameter:\"position\", MO:\"m\", type:\"uint16\"}]},\n            {Operation:\"set-config\", Value:306, Parameters:[\n                {Parameter:\"opentime\", MO:\"m\", type:\"uint16\"},\n                {Parameter:\"closetime\", MO:\"m\", type:\"uint16\"},\n            ]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level0\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level1\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n            {Operation:\"timed-on\", Value:202, Parameters:[{Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level2\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n            {Operation:\"timed-on\", Value:202, Parameters:[{Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"}]},\n            {Operation:\"directional-on\", Value:203, Parameters:[\n                {Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"},\n                {Parameter:\"ratio\", MO:\"m\", type:\"int16\"},\n            ]},\n        ]\n    }\n];\n\nexport const deviceClasses = [\n    'node', \n    'sensor',\n    'actuator',\n    //'nutrient-supply',\n    'misc'\n];\n\nexport const deviceTypes = {\n    node:[\n        'sensor-node',\n        'actuator-node',\n        'integrated-node',\n        //'nutrient-supply-node'\n    ],\n    sensor: [\n        'temperature-sensor',\n        'humidity-sensor',\n        'CO2-sensor',\n        'pyranometer',\n        'wind-direction-sensor',\n        'wind-speed-sensor',\n        'rain-detector',\n        'quantum-sensor',\n        'soil-moisture-sensor',\n        'tensiometer',\n        'EC-sensor',\n        'pH-sensor',\n        'soil-temperature-sensor',\n        'dewpoint-sensor',\n        'flow-sensor',\n        'rainfall-sensor',\n        'voltage-sensor',\n        'weight-sensor',\n        'current-sensor'\n    ],\n    actuator: [\n        'retractable',\n        'switch',\n        'nutrient-supply'\n    ],\n    /*nutrient_supply: [\n        'nutrient-supply'\n    ],*/\n    misc: [\n        'display',\n        //'input/trigger'\n    ]\n};\n\nexport function getDeviceTypes(deviceClass) {\n    if (deviceClass == null) return [];\n\n    var key = deviceClass.replace('-', '_');\n\n    var rslt = deviceTypes[key];\n\n    if (rslt === undefined) return [];\n\n    return rslt;\n}\n\nexport const deviceSubTypes = {\n    sensor_node: [\n        'level0',\n        //'level1'\n    ],\n    actuator_node: [\n        'level0',\n        'level1',\n        //'level2'\n    ],\n    integrated_node: [\n        'level0',\n        'level1',\n        //'level2'\n    ],\n    retractable: [\n        'level0',\n        'level1',\n        'level2'\n    ],\n    switch: [\n        'level0',\n        'level1',\n        'level2'\n    ],\n    nutrient_supply: [\n        'level0',\n        'level1',\n        'level2',\n        'level3'\n    ]\n}\n\nexport function getDeviceSubTypes(deviceType) {\n    if (deviceType == null) return [];\n\n    var key = deviceType.replace('-', '_');\n\n    var rslt = deviceSubTypes[key];\n\n    if (rslt === undefined) return [];\n\n    return rslt;\n}\n\nexport const valueUnit = [\n    {name:\"1 (°C)\", value:1},\n    {name:\"2 (%)\", value:2},\n    {name:\"3 (ppm)\", value:3},\n    {name:\"4 (W/m2)\", value:4},\n    {name:\"5 (°)\", value:5},\n    {name:\"6 (m/s)\", value:6},\n    {name:\"7 (무차원)\", value:7},\n    {name:\"8 (µmol/m2/s)\", value:8},\n    {name:\"9 (%vol.)\", value:9},\n    {name:\"10 (kPa)\", value:10},\n    {name:\"11 (dS/m)\", value:11},\n    {name:\"14 (L)\", value:14},\n    {name:\"15 (V)\", value:15},\n    {name:\"16 (A)\", value:16},\n    {name:\"17 (mm)\", value:17},\n    {name:\"18 (kg)\", value:18},\n    {name:'etc', value:\"etc\"}\n]\n\nexport function getValueUnit4Type(type) {\n    if (type === 'temperature-sensor' || type === 'dewpoint-sensor' || type === 'soil-temperature-sensor') {\n        return 1;\n    } else if (type === 'humidity-sensor') {\n        return 2;\n    } else if (type === 'CO2-sensor') {\n        return 3;\n    } else if (type === 'pyranometer') {\n        return 4;\n    } else if (type === 'wind-direction-sensor') {\n        return 5;\n    } else if (type === 'wind-speed-sensor') {\n        return 6;\n    } else if (type === 'rain-detector' || type === 'pH-sensor') {\n        return 7;\n    } else if (type === 'quantum-sensor') {\n        return 8;\n    } else if (type === 'soil-moisture-sensor') {\n        return 9;\n    } else if (type === 'tensiometer') {\n        return 10;\n    } else if (type === 'EC-sensor') {\n        return 11;\n    } else if (type === 'flow-sensor') {\n        return 14;\n    } else if (type === 'rainfall-sensor') {\n        return 17;\n    } else if (type === 'voltage-sensor') {\n        return 15;\n    } else if (type === 'weight-sensor') {\n        return 18;\n    } else if (type === 'current-sensor') {\n        return 16;\n    }\n\n    return null;\n}\n\nexport const sd = [\n    'None','0',1,2,3,4,5,6,7,8,9,10\n]\n\nexport function getCommSpecItems(json) {\n    var rslt = null;\n    if (json) {\n        var spec = json[commSpecVer];\n        if (spec === undefined && spec === null)\n            return null;\n        \n        rslt = {};\n\n        if (spec.read) {\n            rslt.read = spec.read.items;\n        }\n\n        if (spec.write) {\n            rslt.write = spec.write.items;\n        }\n    }\n\n    return rslt;\n}\n\nexport function getLastSubtype(cls, type) {\n    var fulltype = String(type);\n    \n    if (fulltype.indexOf('/') > 0) {\n        fulltype = fulltype.split('/')[0];\n        var subs = deviceSubTypes[fulltype.replace('-', '_')];\n        if (subs && subs.length > 0) {\n            return subs[subs.length - 1];\n        }\n\n    } else {\n        return \"\";\n    }\n\n    return \"\";\n}\n\nexport function getCommSpecItemsFull(json) {\n    var rslt = null;\n    if (json) {\n        var cls = json.Class;\n        var type = String(json.Type);\n\n        var fulltype = getLastSubtype(cls, type);\n\n        if (type.indexOf('/') > 0) {\n            type = type.split('/')[0];\n        }\n\n        var spec = CommSpec.getCommSpec(cls, type, fulltype);\n\n        if (spec === undefined && spec === null)\n            return null;\n        \n        rslt = {};\n\n        if (spec.read) {\n            rslt.read = [];\n            spec.read.items.map((item) => {\n                rslt.read.push(item.item);\n                return item;\n            });\n        }\n\n        if (spec.write) {\n            rslt.write = [];\n            spec.write.items.map((item) => {\n                rslt.write.push(item.item);\n                return item;\n            });\n        }\n    }\n\n    return rslt;\n}\n\nexport function getCommSpecOperation(cls, type) {\n    \n    for(var i=0; i<operationSpec.length; i++) {\n        var op = operationSpec[i];\n\n        if (op.Class === cls && op.Type === type) {\n            return op.Operations;\n        }\n    }\n\n    return null;\n}\n\nexport function getCommSpecOperationFull(cls, type) {\n    var fulltype = String(type);\n    if (fulltype.indexOf('/') > 0) {\n        fulltype = fulltype.split('/')[0];\n    }\n\n    var sub = getLastSubtype(cls, type);\n    fulltype += '/' + sub;\n\n    for(var i=0; i<operationSpec.length; i++) {\n        var op = operationSpec[i];\n\n        if (op.Class === cls && op.Type === fulltype) {\n            return op.Operations;\n        }\n    }\n\n    return null;\n}\n\n","import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\n//import * as Data from './data';\nimport CommSpec from './CommSpec'\nimport './CommSpecComponent.css'\n\nvar placeholder = document.createElement(\"li\");\nplaceholder.className = \"itemM\";\n\nvar key = 0;\n\nexport default class CommSpecComponebt extends Component {\n    state = {\n        readStartingRegister:\"\",\n        writeStartingRegister:\"\",\n        readItems:null,\n        writeItems:null,\n        savedCommSpec:null,\n        refresh:1\n    }\n\n    constructor(props) {\n        super(props);\n        this.commSpec = null;\n        this.result = null;\n    }\n\n    componentDidMount() {\n        this.updateCommSpec();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.cls !== this.props.cls || prevProps.type !== this.props.type || prevProps.subtype !== this.props.subtype) {\n            this.updateCommSpec();\n        }\n    }\n\n    updateCommSpec = () => {\n        this.commSpec = CommSpec.getCommSpec(this.props.cls, this.props.type, this.props.subtype);\n        if (this.commSpec) {\n            this.setState(\n                {\n                    readStartingRegister:this.commSpec.read[\"starting-register\"] || \"\",\n                    writeStartingRegister:this.commSpec.write ? this.commSpec.write[\"starting-register\"] || \"\" : \"\",\n                    readItems:this.commSpec.read.items,\n                    writeItems:this.commSpec.write ? this.commSpec.write.items : null,\n                }\n            , () => {\n                if (this.state.savedCommSpec) {\n                    this.matchCommSpec(this.state.savedCommSpec);\n                }\n                this.props.onChanged();\n            });\n        } else { \n            this.setState(\n                {\n                    readStartingRegister:\"\",\n                    writeStartingRegister:\"\",\n                    readItems:null,\n                    writeItems:null,\n                }\n            , () => {\n                this.props.onChanged();\n            });\n        }\n    }\n\n    getCommSpec = () => {\n        \n        if (!this.commSpec) return null;\n\n        var read = [];\n        var write = [];\n\n        if (this.state.readItems === null) return null;\n\n        this.state.readItems.map((item) => {\n            if (item.mo !== \"x\") {\n                read.push(item.item);\n            }\n\n            return null;\n        });\n\n        if (this.state.readStartingRegister != null && this.state.readStartingRegister > 0) {\n            this.commSpec.read[\"starting-register\"] = this.state.readStartingRegister;\n        } else {\n            this.commSpec.read[\"starting-register\"] = undefined;\n            delete this.commSpec.read[\"starting-register\"];\n        }\n\n        if (this.state.writeItems) {\n            this.state.writeItems.map((item) => {\n                if (item.mo !== \"x\") {\n                    write.push(item.item);\n                }\n\n                return null;\n            });\n        }\n\n        this.commSpec.read.items = read;\n\n        if (this.commSpec.write) {\n            this.commSpec.write.items = write;\n            if (this.state.writeStartingRegister != null && this.state.writeStartingRegister > 0) {\n                this.commSpec.write[\"starting-register\"] = this.state.writeStartingRegister;\n            } else {\n                this.commSpec.write[\"starting-register\"] = undefined;\n                delete this.commSpec.write[\"starting-register\"];\n            }\n        }\n\n        return CommSpec.addOuter(this.commSpec);\n    }\n\n    setCommSpec = (cmspc) => {\n        this.setState({savedCommSpec:cmspc});\n    }\n\n    matchCommSpec = (cmspc) => {\n        if (!cmspc) return;\n\n        var read = cmspc[\"KS-X-3267:2021\"].read;\n        var write = cmspc[\"KS-X-3267:2021\"].write;\n\n        var readitem = null;\n        var writeitem = null;\n\n        if (read) {\n            this.setState({readStartingRegister:read[\"starting-register\"]});\n\n            readitem = [];\n            if (this.state.readItems) {\n                read.items.map((item) => {\n                    var idx = -1;\n\n                    for(var i = 0; i < this.state.readItems.length; i++) {\n                        var it = this.state.readItems[i];\n                        if (it.item === item) {\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    if (idx >= 0) {\n                        readitem.push(this.state.readItems[idx]);\n                    }\n\n                    return null;\n                });\n\n                this.state.readItems.map((item) => {\n                    if (read.items.indexOf(item.item) < 0) {\n                        if (item.mo === \"o\") {\n                            item.mo = \"x\";\n                            readitem.push(item);\n                        }\n                    }\n\n                    return null;\n                });\n            }\n        }\n\n        if (write) {\n            this.setState({writeStartingRegister:write[\"starting-register\"]});\n            \n            writeitem = [];\n            if (this.state.writeItems) {\n                write.items.map((item) => {\n                    var idx = -1;\n\n                    for(var i = 0; i < this.state.writeItems.length; i++) {\n                        var it = this.state.writeItems[i];\n                        if (it.item === item) {\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    if (idx >= 0) {\n                        writeitem.push(this.state.writeItems[idx]);\n                    }\n\n                    return null;\n                });\n\n                this.state.writeItems.map((item) => {\n                    if (write.items.indexOf(item.item) < 0) {\n                        if (item.mo === \"o\") {\n                            item.mo = \"x\";\n                            writeitem.push(item);\n                        }\n                    }\n\n                    return null;\n                });\n            }\n        }\n\n        this.setState({readItems:readitem, writeItems:writeitem}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    readStartingVal = (val) => {\n        if (val.target.value == null || val.target.value.length <= 0) {\n            this.setState({readStartingRegister:null}, () => {\n                this.props.onChanged();\n            });\n        } else {\n            var parsed = parseInt(val.target.value);\n            if (parsed) {\n                //this.commSpec.read[\"starting-register\"] = parsed;\n                this.setState({readStartingRegister:parsed}, () => {\n                    this.props.onChanged();\n                });\n            }\n        }\n    }\n\n    writeStartingVal = (val) => {\n        if (val.target.value == null || val.target.value.length <= 0) {\n            this.setState({writeStartingRegister:null}, () => {\n                this.props.onChanged();\n            });\n        } else {\n            var parsed = parseInt(val.target.value);\n            if (parsed) {\n                //this.commSpec.read[\"starting-register\"] = parsed;\n                this.setState({writeStartingRegister:parsed}, () => {\n                    this.props.onChanged();\n                });\n            }\n        }\n    }\n\n    optionBtn = (type, item) => {\n        /*if (type === \"read\") {\n            var idx = this.commSpec.read.items.indexOf(item);\n            this.commSpec.read.items[idx].mo = \"m\";\n        }*/\n\n        if (item.mo === \"o\") item.mo = \"x\"\n        else item.mo = \"o\"\n\n        this.setState({refresh:1});\n\n        this.props.onChanged();\n    }\n\n    dragStart = (e) => {\n        this.dragged = e.currentTarget;\n        this.dragged.style.backgroundColor = \"darkgray\";\n\n        e.currentTarget.parentNode.appendChild(placeholder);\n    }\n\n    dragOver = (e) => {\n        e.preventDefault();\n        if (e.target === this.dragged) return;\n        if (e.target.tagName !== \"LI\") return;\n        if (e.target.parentNode !== this.dragged.parentNode) return;\n\n        this.over = e.target;\n\n        e.target.parentNode.insertBefore(this.dragged, e.target);\n    }\n\n    readDragEnd = (e) => {\n        this.dragEnd(this.state.readItems);\n        this.setState({readItems:this.state.readItems}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    writeDragEnd = (e) => {\n        this.dragEnd(this.state.writeItems);\n        this.setState({writeItems:this.state.writeItems}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    dragEnd = (items) => {\n        \n        this.dragged.style.backgroundColor = null;\n        this.dragged.parentNode.removeChild(placeholder);\n\n        if (this.over.dataset.id) {\n            var from = Number(this.dragged.dataset.id);\n            var to = Number(this.over.dataset.id);\n            \n            if(from < to) to--;\n            \n            items.splice(to, 0, items.splice(from, 1)[0]);\n        } else {\n            var item = items[this.dragged.dataset.id];\n            items.splice(this.dragged.dataset.id, 1);\n            items.push(item);\n        }\n    }\n\n    render() {\n\n        \n\n        return (\n            <>\n            {this.commSpec &&\n                <div className=\"card\">\n                    <span className=\"p-inputgroup-addon\" style={{width:\"378px\"}}>CommSpec</span>\n                    <div style={{marginLeft:\"5px\",marginRight:\"5px\"}}>\n                        <div style={{marginLeft:\"0px\"}}>\n                            <div className=\"card\" style={{margin:\"5px\"}}>\n                                <span className=\"p-inputgroup-addon\" style={{width:\"356px\",height:\"30px\"}}>read</span>\n                                <div style={{marginLeft:\"10px\",marginRight:\"10px\",marginTop:\"5px\"}}>\n                                    starting-register\n                                    <input style={{marginLeft:\"10px\",width:\"207px\"}} id=\"read-starting-register\" onChange={this.readStartingVal} value={this.state.readStartingRegister || ''}></input>\n                                    {this.state.readItems &&\n                                    <ul className=\"list\" onDragOver={this.dragOver}>\n                                        {this.state.readItems.map((item, i) => {\n                                            return (\n                                                <li className={item.mo === \"m\" ? \"itemM\" : (item.mo === \"o\" ? \"itemO\" : \"itemX\")} key={key++}\n                                                    data-id={i}\n                                                    draggable=\"true\"\n                                                    onDragStart={this.dragStart}\n                                                    onDragEnd={this.readDragEnd}>\n                                                    {item.item}\n                                                    {item.mo !== \"m\" &&\n                                                        //<Button style={{float:\"right\"}} size=\"sm\" variant=\"danger\" onClick={()=> this.optionBtn(\"read\", item)}>X</Button>\n                                                        <Button style={{float:\"right\",margin:\"-3px\",height:\"30px\"}} className={item.mo === \"o\" ? \"p-button-danger\" : \"p-button-success\"} icon={item.mo === \"o\" ? \"pi pi-times\" : \"pi pi-check\"} onClick={()=> {\n                                                            this.optionBtn(\"read\", item)\n                                                        }}></Button>\n                                                    }\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>}\n                                </div>\n                            </div>\n                        </div>\n                        {this.state.writeItems && \n                        <div style={{}}>\n                            <div className=\"card\" style={{margin:\"5px\"}}>\n                                <span className=\"p-inputgroup-addon\" style={{width:\"356px\",height:\"30px\"}}>write</span>\n                                <div style={{marginLeft:\"10px\",marginRight:\"10px\",marginTop:\"5px\"}}>\n                                    starting-register\n                                    <input style={{marginLeft:\"10px\",width:\"207px\"}} id=\"write-starting-register\" onChange={this.writeStartingVal} value={this.state.writeStartingRegister || ''}></input>\n                                    <ul className=\"list\" onDragOver={this.dragOver}>\n                                        {this.state.writeItems.map((item, i) => {\n                                            return (\n                                                <li className={item.mo === \"m\" ? \"itemM\" : (item.mo === \"o\" ? \"itemO\" : \"itemX\")} key={key++}\n                                                    data-id={i}\n                                                    draggable=\"true\"\n                                                    onDragStart={this.dragStart}\n                                                    onDragEnd={this.writeDragEnd}>\n                                                    {item.item}\n                                                    {item.mo !== \"m\" &&\n                                                        //<Button style={{float:\"right\"}} size=\"sm\" variant=\"danger\" onClick={()=> this.optionBtn(\"read\", item)}>X</Button>\n                                                        <Button style={{float:\"right\",margin:\"-3px\"}} size=\"sm\" variant={item.mo === \"o\" ? \"danger\" : \"success\"} onClick={()=> {\n                                                            this.optionBtn(\"write\", item)\n                                                        }}>{item.mo === \"o\" ? \"X\" : \"O\"}</Button>\n                                                    }\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            }\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NewWindow from 'react-new-window';\nimport { saveAs } from 'file-saver';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { Panel } from 'primereact/panel';\n\nexport default class DeviceSpecPopup extends Component {\n    state = {\n        files : null,\n        selectFile : null,\n        fileJson : null,\n        addDeviceMessage : null,\n        errorMsg : true,\n        class : null,\n        canModify : false,\n        canLoad : false,\n    }\n/*\n    constructor(props) {\n        super(props);\n    }\n*/\n    componentDidMount() {\n        this.getFiles();\n        this.setState({canModify:this.props.modify, canLoad:this.props.load});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.show !== this.props.show && this.props.show) {\n            this.getFiles();\n        }\n    }\n\n    setClass = (cls) => {\n        this.setState({class:cls});\n    }\n    \n    getFiles = () => {\n\n        fetch(\"/devicespeclist\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({files:result.files, selectFile : null, fileJson : null});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        );\n    }\n\n    onListSelect = (file) =>{\n        this.setState({selectFile:file});\n\n        fetch(\"/devicespec?file=\" + file, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({fileJson:result.json});\n                }\n            },\n            (error) => {\n                window.alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onFilesUnload = () => {\n        this.setState({files:null, selectFile:null, fileJson:null});\n    }\n\n    onAddDevice = () => {\n\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            //this.setState({addDeviceMessage:\"추가할 장비 규격 파일을 선택하세요.\"});\n            this.toastBL.show({severity:'error', detail:\"추가할 장비 규격 파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        this.props.onAddDevice(this.state.selectFile, this.state.fileJson);\n\n        //this.state.addDeviceList[this.state.selectFile] = this.state.fileJson;\n        //this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n    onRemoveFile = () =>{\n        \n        if (this.state.selectFile == null) {\n            //this.setState({addDeviceMessage:\"삭제할 장비 규격 파일을 선택하세요.\"});\n            this.toastBL.show({severity:'error', detail:\"삭제할 장비 규격 파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        fetch(\"/devicespec?file=\" + this.state.selectFile, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 삭제 실패! \" + result.errormsg);\n                } else {\n                    this.getFiles();\n                }\n            },\n            (error) => {\n                alert(\"파일 삭제 실패! \" + error);\n            }\n        )\n    }\n\n    onModify = () => {\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            //this.setState({addDeviceMessage:\"수정할 장비 규격 파일을 선택하세요.\"});\n            this.toastBL.show({severity:'error', detail:\"수정할 장비 규격 파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        this.props.onModify(this.state.fileJson, this.state.selectFile);\n\n        //this.setJson(this.state.fileJson);\n        //document.getElementById('deviceSpecNameInput').value = this.state.selectFile;\n    }\n\n    onLoad = () => {\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            //this.setState({addDeviceMessage:\"불러올 장비 규격 파일을 선택하세요.\"});\n            this.toastBL.show({severity:'error', detail:\"불러올 장비 규격 파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        this.props.onLoad(this.state.fileJson, this.state.selectFile);\n    }\n\n    onDownload = () => {\n        if (!this.state.fileJson || this.state.fileJson.length < 0) {\n            //this.setState({addDeviceMessage:\"다운로드할 장비 규격 파일을 선택하세요.\"});\n            this.toastBL.show({severity:'error', detail:\"다운로드할 장비 규격 파일을 선택하세요.\", life: 3000});\n            //console.log(this.state.errorMsg);\n            return;\n        }\n\n        let blob = new Blob([JSON.stringify(this.state.fileJson, null, 4)], {type:'text/plain;charset=utf-8'});\n        saveAs(blob, this.state.selectFile);\n    }\n\n    onUpload = () => {\n        this.setState({errorMsg:false}, () => {\n            //console.log(this.state.errorMsg);\n            //this.setState({errorMsg:false,addDeviceMessage:\"업로드 성공!\"}, () => {\n            //    console.log(this.state.errorMsg);\n            this.toastBL.show({severity:'success', detail:\"업로드 성공!\", life: 3000});\n            this.getFiles();\n            //this.setState({errorMsg:true});\n            //});\n        });\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onFilesUnload} center={\"parent\"} title={\"장비 규격 파일 불러오기\"} features={{width:800, height:800}}>\n                    <div >\n                        <div className=\"p-grid p-justify-end\">\n                            <div className=\"p-col-2\" style={{margin:\"5px\",marginRight:\"10px\"}}>\n                                <Button className=\"p-button-secondary\" label=\"새로고침\" style={{width:\"100%\"}}\n                                    onClick={this.getFiles}></Button>\n                            </div>\n                        </div>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-fixed\" style={{width:\"340px\",paddingRight:\"0px\"}}>\n                                <Panel header=\"FILE\" style={{marginLeft:\"10px\"}}>\n                                {\n                                    this.state.files && this.state.files.length > 0 ?\n                                    <div className=\"heightPopup\">\n                                        {this.state.files.map((file, idx) => \n                                        <div key={idx}><Button key={idx + \"dvcspc\"} className={this.state.selectFile === file ? \"p-button-primary\" : \"p-button-outlined p-button-secondary\"} style={{minWidth:\"280px\", textAlign:\"start\", marginBottom:\"1px\"}} label={file} onClick={() => this.onListSelect(file)} ></Button><br/></div>\n                                        )}\n                                    </div>\n                                    :\n                                    <div>저장된 파일 없음</div>\n                                }\n                                </Panel>\n                            </div>\n                            <div className=\"p-col\">\n                                <Panel header=\"JSON\" style={{marginRight:\"10px\"}}>\n                                    <div className=\"heightPopup\" style={{marginBottom:\"0px\"}}>\n                                        <pre style={{fontSize:\"13px\"}}>\n                                            <code>\n                                                {this.state.fileJson && JSON.stringify(this.state.fileJson, null, 4)}\n                                            </code>\n                                        </pre>\n                                    </div>\n                                </Panel>\n                            </div>\n                        </div>\n                        <div className=\"p-grid p-justify-between\" style={{marginTop:\"0px\",marginLeft:\"10px\",marginRight:\"15px\"}}>\n                            <div className=\"p-col-2\" style={{padding:\"0px\"}}>\n                                <FileUpload style={{height:\"31px !important\",backgroundColor:'#dddddd  !important'}} mode=\"basic\" name=\"file\" url=\"/devicespec\" accept=\".json\" maxFileSize={1000000} onUpload={this.onUpload} auto chooseLabel=\"업로드\" multiple/>\n                            </div>\n                            <div className=\"p-col\" style={{padding:\"0px\"}}>\n                                <div className=\"p-grid p-justify-end\">\n                                    {\n                                        this.state.class === \"node\" && \n                                        <div className=\"p-col-3\">\n                                            <Button className=\"p-button-secondary\" label=\"Device로 추가\" style={{width:\"130px\"}}\n                                                onClick={this.onAddDevice}></Button>\n                                        </div>\n                                    }\n                                    {\n                                        this.state.canModify &&\n                                        <div className=\"p-col-2\">\n                                            <Button className=\"p-button-secondary\" label=\"수정\" style={{width:\"100px\"}}\n                                                onClick={this.onModify}></Button>\n                                        </div>\n                                    }\n                                    {\n                                        this.state.canLoad &&\n                                        <div className=\"p-col-2\">\n                                            <Button className=\"p-button-secondary\" label=\"불러오기\" style={{width:\"100px\"}}\n                                                onClick={this.onLoad}></Button>\n                                        </div>\n                                    }\n                                    <div className=\"p-col-2\">\n                                        <Button className=\"p-button-secondary\" label=\"다운로드\" style={{width:\"100px\"}}\n                                            onClick={this.onDownload}></Button>\n                                    </div>\n                                    <div className=\"p-col-2\">\n                                        <Button className=\"p-button-secondary\" label=\"삭제\" style={{width:\"100px\"}}\n                                            onClick={this.onRemoveFile}></Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Toast ref={(el) => this.toastBL = el} position=\"bottom-right\" />\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport * as Data from './data'\nimport CommSpecComponent from './CommSpecComponent'\nimport DeviceSpecPopup from './DeviceSpecPopup'\nimport { Toast } from 'primereact/toast';\nimport { confirmPopup } from 'primereact/confirmpopup';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputText } from \"primereact/inputtext\";\nimport { Panel } from 'primereact/panel';\n\nexport default class EquipManage extends Component {\n    state = {\n        //files : null,\n        //selectFile : null,\n        //fileJson : null,\n        showFiles : false,\n        //addDeviceMessage : null,\n        class : null,\n        model : null,\n        type : null,\n        subtype : null,\n        name : null,\n        valueunit : null,\n        valueunitetc : null,\n        sd : null,\n        channel : null,\n        deviceSpecName : null,\n        saveAlert : false,\n        saveResult : true,\n        saveErrorMessage : null,\n        overwrite : false,\n        overwriteMessage : false,\n        addDeviceList : {},\n        refresh : null,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.csCmpRef = React.createRef();\n        this.dvcPopRef = React.createRef();\n    }\n\n    setModel = () => {\n        this.setState({model:document.getElementById('modelInput').value});\n    }\n\n    setName = () => {\n        this.setState({name:document.getElementById('nameInput').value});\n    }\n\n    setChannel = () => {\n        this.setState({channel:document.getElementById('channelInput').value});\n    }\n\n    setValueUnitEtc = () => {\n        this.setState({valueunitetc:document.getElementById('valueUnitInput').value});\n    }\n\n    setDeviceSpecName = () => {\n        this.setState({deviceSpecName:document.getElementById('deviceSpecNameInput').value});\n    }\n\n    setSaveMsg = (result, msg) => {\n        this.setState({saveResult:result, saveErrorMessage:msg, saveAlert:true});\n    }\n\n    overwriteClick = () => {\n        this.setState({overwrite:true, overwriteMessage:false, saveAlert:false}, () => {\n            this.saveClick();\n            this.setState({overwrite:false});\n        });\n    }\n\n    onShowFiles = () => {\n        //this.getFiles();\n        this.setState({showFiles:false}, () => {\n            this.setState({showFiles:true});\n        });\n    }\n\n    onModify = (json, name) => {\n        /*if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"수정할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }*/\n\n        this.setJson(json);\n        document.getElementById('deviceSpecNameInput').value = name;\n        this.setDeviceSpecName();\n        this.setState({showFiles:false});\n    }\n\n    onCommSpecChange = () => {\n        this.setState({refresh:null});\n    }\n\n    setJson = (json) => {\n\n        if (json.Class) {\n            this.setState({class:json.Class}, () => {\n                this.csCmpRef.current.setCommSpec(json.CommSpec);\n                this.dvcPopRef.current.setClass(this.state.class);\n            });\n        }\n\n        if (json.Type) {\n            if (json.Type.indexOf('/') > 0) {\n                var types = json.Type.split('/');\n                this.setState({type:types[0], subtype:types[1]});\n            } else {\n                this.setState({type:json.Type, subtype:null});\n            }\n        }\n\n        if (json.Model && json.Model !== \"null\") {\n            this.setState({model:json.Model});\n            document.getElementById('modelInput').value = json.Model;\n        }\n\n        if (json.Name && json.Name !== \"null\") {\n            this.setState({name:json.Name});\n            document.getElementById('nameInput').value = json.Name;\n        }\n\n        if (json.ValueUnit) {\n            if (json.ValueType === \"string\") {\n                this.setState({valueunitetc:json.ValueUnit, valueunit:\"etc\"}, () => {\n                    document.getElementById('valueUnitInput').value = json.ValueUnit;\n                });\n            } else {\n                this.setState({valueunitetc:null, valueunit:json.ValueUnit});\n            }\n        }\n\n        if (json.SignificantDigit !== undefined && json.SignificantDigit !== null) {\n            console.log(json.SignificantDigit);\n            this.setState({sd:json.SignificantDigit});\n        }\n\n        if (json.Channel) {\n            this.setState({channel:json.Channel}, () => {\n                document.getElementById('channelInput').value = json.Channel;\n            });\n        }\n\n        if (json.Devices && json.Devices.length > 0) {\n            var dvclist = {};\n            \n            json.Devices.map((dvc, idx) => {\n                dvclist['tmp' + idx] = dvc;\n                return dvc;\n            });\n\n            this.setState({addDeviceList:dvclist});\n        }\n    }\n\n    onAddDevice = (name, json) => {\n        if (this.state.type === 'sensor-node') {\n            if (json.Class !== 'sensor') {\n                console.log(json);\n                this.toastBL.show({severity:'error', summary: '추가 실패', detail:'sensor-node 에는 sensor만 추가할 수 있습니다.', life: 3000});\n                return;\n            }\n        } else if (this.state.type === 'actuator-node') {\n            if (json.Class !== 'actuator') {\n                console.log(json);\n                this.toastBL.show({severity:'error', summary: '추가 실패', detail:'actuator-node 에는 actuator만 추가할 수 있습니다.', life: 3000});\n                return;\n            }\n        }\n        if (this.state.addDeviceList[name]) {\n            let idx = 1;\n            while(true) {\n                if (!this.state.addDeviceList[name+'_'+idx]) {\n                    this.state.addDeviceList[name+'_'+idx] = json;\n                    break;\n                }\n\n                idx++;\n            }\n        }\n        this.state.addDeviceList[name] = json;\n        this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n    onRemoveFromDeviceList = (file) => {\n        delete this.state.addDeviceList[file];\n        this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n\n    saveClick = (event) => {\n\n        // 문법검사필요\n        // starting register 생략 가능 (노드 제외)\n        if (!this.state.deviceSpecName) {\n            //this.setSaveMsg(false, '장비 규격 이름을 입력하세요.');\n            this.toastBL.show({severity:'error', summary: 'Error', detail:'장비 규격 이름을 입력하세요.', life: 3000});\n            return;\n        }\n\n        let overwriteConfirm = {\n            target: event ? event.currentTarget : null,\n            message: '동일한 이름의 장비 규격 파일이 있습니다. 덮어쓰시겠습니까?',\n            icon: 'pi pi-exclamation-triangle',\n            acceptLabel:'예',\n            rejectLabel:'아니오',\n            accept: this.overwriteClick,\n            reject: null\n        };\n\n        fetch(\"/devicespec\", {\n            body: JSON.stringify({\n                name: this.state.deviceSpecName,\n                overwrite: this.state.overwrite,\n                json: this.getJson()}),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result === \"error\") {\n                    //this.setSaveMsg(false, result.errormsg);\n                    this.toastBL.show({severity:'error', summary: '저장 실패', detail:result.errormsg, life: 3000});\n                } else if (result.result === \"duplicate\") {\n                    //this.state.overwriteMessage = true;\n                    //this.setSaveMsg(false, null);\n                    confirmPopup(overwriteConfirm); \n                } else if (result.result === \"success\") {\n                    //this.setSaveMsg(true, result.file);\n                    this.toastBL.show({severity:'success', summary: '저장 성공', detail:result.file, life: 3000});\n                } else {\n                    //this.setSaveMsg(false, result.errormsg);\n                    this.toastBL.show({severity:'error', summary: '저장 실패', detail:result.errormsg, life: 3000});\n                }\n            },\n            (error) => {\n                //this.setSaveMsg(false, error);\n                this.toastBL.show({severity:'error', summary: '저장 실패', detail:error, life: 3000});\n            }\n        )\n    }\n\n    isSensor = () => {\n        if(this.state.class === 'sensor') return true;\n        else return false;\n    }\n\n    getJson = () => {\n        var json = {};\n        json.Class = this.state.class;\n        json.Type = this.state.type;\n        if (this.state.subtype != null)\n            json.Type += '/' + this.state.subtype;\n\n        if (this.state.model != null && this.state.model.length > 0)\n            json.Model = this.state.model;\n\n        if (this.state.name != null && this.state.name.length > 0)\n            json.Name = this.state.name;\n\n        if (this.isSensor()) {\n            if (this.state.valueunit === 'etc') {\n                json.ValueUnit = this.state.valueunitetc;\n                json.ValueType = \"string\";\n            } else {\n                json.ValueUnit = parseInt(this.state.valueunit);\n                json.ValueType = \"float\";\n            }\n            \n            if (this.state.sd !== 'None' && this.state.sd !== null) {\n                json.SignificantDigit = parseInt(this.state.sd);\n            }\n        }\n\n        if (this.state.class != null) {\n            if (this.state.class !== 'node') {\n                if (this.state.channel !== null && this.state.channel.length > 0) {\n                    var chn = parseInt(this.state.channel);\n                    if (!isNaN(chn)) {\n                        json.Channel = chn;\n                    }\n                }       \n            }\n            if (this.csCmpRef && this.csCmpRef.current) {\n                var cs = this.csCmpRef.current.getCommSpec();\n                if (cs)\n                    json.CommSpec = cs;\n            }\n                \n\n            if (this.state.class === 'node') {\n                if (Object.keys(this.state.addDeviceList).length > 0) {\n                    var devices = [];\n                    Object.keys(this.state.addDeviceList).map((key) => {\n                        devices.push(this.state.addDeviceList[key]);\n                        return null;\n                    });\n\n                    json.Devices = devices;\n                }\n            }\n        }\n        \n        return json;\n    }\n    \n    render() {\n        return (\n            <>\n                <DeviceSpecPopup \n                    ref={this.dvcPopRef}\n                    show={this.state.showFiles} modify={true}\n                    onModify={this.onModify}\n                    onAddDevice={this.onAddDevice}></DeviceSpecPopup>\n                <div className=\"p-grid p-justify-between\">\n                    <div className=\"p-col-fixed\" style={{width:\"250px\"}}>\n                        <Button className=\"p-button-secondary\" label=\"장비 규격 파일 검색\" style={{width:\"200px\", margin:\"10px 10px 10px 20px\"}}\n                            onClick={this.onShowFiles}></Button>\n                    </div>\n                    <div className=\"p-col-fixed\" style={{width:\"500px\", marginTop:\"10px\", marginRight:\"20px\"}}>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>장비 규격 이름</span>\n                            <InputText id=\"deviceSpecNameInput\" onKeyUp={this.setDeviceSpecName} ></InputText>\n                            <Button className=\"p-button-secondary\" label=\"저장\" style={{width:\"100px\"}}\n                                onClick={this.saveClick}></Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"p-grid\">\n                    <div className=\"p-col-fixed\" style={{width:\"450px\",paddingRight:\"0px\"}}>\n                        <Panel header=\"SPEC\" style={{marginLeft:\"10px\"}}>\n                        <div className=\"heightLine\">\n                            <span className=\"p-float-label\" style={{marginTop:\"20px\"}}>\n                                <Dropdown style={{width:\"225px\"}} value={this.state.class} options={Data.deviceClasses} onChange={(e) =>{\n                                    if (this.state.class !== e.value) {\n                                        this.setState({type:null, subtype:null, valueunit:null, addDeviceList:{}, commSpec:null}, () => {\n                                            this.csCmpRef.current.setCommSpec(null);\n                                            this.dvcPopRef.current.setClass(this.state.class);\n                                        });\n                                    }\n\n                                    this.setState({class:e.value});\n                                }}></Dropdown>\n                                <label htmlFor=\"dropdown\">Class</label>\n                            </span>\n                            <div className=\"p-grid\" style={{marginTop:\"20px\"}}>\n                                <div className=\"p-col-fixed\" style={{width:\"230px\"}}>\n                                    <span className=\"p-float-label\">\n                                        <Dropdown value={this.state.type} options={Data.getDeviceTypes(this.state.class)} onChange={(e) =>{\n                                            this.csCmpRef.current.setCommSpec(null);\n                                            this.setState({type:e.value, subtype:null, addDeviceList:{}}, () => {\n                                                if (this.state.class == 'sensor') {\n                                                    this.setState({valueunit:Data.getValueUnit4Type(e.value)});\n                                                }\n                                            });\n                                        }}></Dropdown>\n                                        <label htmlFor=\"dropdown\">Type</label>\n                                    </span>\n                                </div>\n                                <div className=\"p-col\">\n                                    <span className=\"p-float-label\">\n                                        <Dropdown style={{width:\"150px\"}} value={this.state.subtype} options={Data.getDeviceSubTypes(this.state.type)} onChange={(e) =>{\n                                            this.csCmpRef.current.setCommSpec(null);\n                                            this.setState({subtype:e.value});\n                                        }}></Dropdown>\n                                        <label htmlFor=\"dropdown\">SubType</label>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"p-inputgroup\" style={{marginTop:\"20px\",width:\"380px\"}}>\n                                <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>Model</span>\n                                <InputText id=\"modelInput\" onKeyUp={this.setModel} placeholder=\"제품의 모델 번호 (영문과 숫자의 조합)\"></InputText>\n                            </div>\n                            <div className=\"p-inputgroup\" style={{marginTop:\"10px\",width:\"380px\"}}>\n                                <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>Name</span>\n                                <InputText id=\"nameInput\" onKeyUp={this.setName} placeholder=\"모델명 (문자열)\"></InputText>\n                            </div>\n                            {\n                                this.isSensor() && \n                                <div>\n                                    <div className=\"p-inputgroup\" style={{marginTop:\"10px\",width:\"380px\"}}>\n                                        <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>ValueUnit</span>\n                                        <Dropdown style={{width:\"50px\"}} value={this.state.valueunit} options={Data.valueUnit} optionLabel=\"name\" optionValue=\"value\" onChange={(e) =>{\n                                            if (e.value === 'etc' && this.state.valueunit !== 'etc') {\n                                                this.setState({valueunitetc:null});\n                                            }\n\n                                            this.setState({valueunit:e.value});\n                                        }}></Dropdown>\n                                        {\n                                            this.state.valueunit === 'etc' &&\n                                            <InputText id=\"valueUnitInput\" onKeyUp={this.setValueUnitEtc} ></InputText>\n                                        }\n                                    </div>\n                                    <div className=\"p-inputgroup\" style={{marginTop:\"10px\",width:\"380px\"}}>\n                                        <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>SignificantDigit</span>\n                                        <Dropdown style={{width:\"50px\"}} value={this.state.sd} options={Data.sd} onChange={(e) =>{\n                                            this.setState({sd:e.value});\n                                        }}></Dropdown>\n                                    </div>\n                                </div>\n                            }\n                            {\n                                this.state.class !== 'node' && \n                                <div className=\"p-inputgroup\" style={{marginTop:\"10px\",width:\"380px\"}}>\n                                    <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>Channel</span>\n                                    <InputText id=\"channelInput\" onKeyUp={this.setChannel} ></InputText>\n                                </div>\n                            }\n                            <div style={{marginTop:\"20px\", padding:\"0px\", width:\"380px\"}}>\n                                <CommSpecComponent \n                                    ref={this.csCmpRef} \n                                    cls={this.state.class} type={this.state.type} subtype={this.state.subtype} onChanged={this.onCommSpecChange}>\n                                </CommSpecComponent>\n                            </div>\n                            {\n                                this.state.class === 'node' && \n                                <Button className=\"p-button-secondary\" label=\"Device 추가\" style={{width:\"130px\", height:\"30px\", marginTop:\"20px\"}}\n                                    onClick={this.onShowFiles}></Button>\n                            }\n                            {\n                                this.state.class === 'node' && Object.keys(this.state.addDeviceList).length > 0 &&\n                                <div>\n                                    {Object.keys(this.state.addDeviceList).map((key, idx) => (\n                                        <div  key={idx} className=\"p-inputgroup\" style={{height:\"33px\",marginTop:\"5px\"}}>\n                                            <span className=\"p-inputgroup-addon\" style={{width:\"345px\"}}>{key}</span>\n                                            <Button className=\"p-button-danger\" icon=\"pi pi-times\" onClick={()=> this.onRemoveFromDeviceList(key)}/>\n                                        </div>\n                                    ))}\n                                </div>\n                            }\n                        </div>\n                        </Panel>\n                    </div>\n                    <div className=\"p-col\" style={{}}>\n                        <Panel header=\"JSON\" style={{marginRight:\"10px\"}}>\n                            <div className=\"heightLine\" style={{marginBottom:\"0px\"}}>\n                                <pre style={{marginRight:\"10px\",fontSize:\"13px\"}}>\n                                    \n                                        {JSON.stringify(this.getJson(), null, 4)}\n                                    \n                                </pre>\n                            </div>\n                        </Panel>\n                    </div>\n                </div>\n                <Toast ref={(el) => this.toastBL = el} position=\"top-right\" />\n            </>            \n        );\n    }\n}","import React, { Component } from 'react';\nimport * as Data from './data';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport { InputText } from \"primereact/inputtext\";\nimport { Panel } from 'primereact/panel';\n\nexport default class TestSpec extends Component {\n    state = {\n        command : \"SET\",\n        device : null,\n        deviceList : [],\n        operations:{},\n        targets:{},\n        operation:null,\n        devicespec:null,\n    }\n\n    constructor(props) {\n        super(props);\n        \n        /*if (props.deviceSpec)\n            this.setDeviceSpec(props.deviceSpec, true);*/\n        this.divRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.deviceSpec)\n            this.setDeviceSpec(this.props.deviceSpec, true);\n    }\n\n    componentDidUpdate(prevProps) {\n        \n    }\n\n    setDeviceSpec = (deviceSpec, full = false) => {\n\n        if (deviceSpec) {\n\n            if (Object.equals(deviceSpec, this.state.devicespec)) {\n                console.log('same');\n                return;\n            }\n\n            this.setState({devicespec:deviceSpec});\n\n            var dvclist = [];\n            var operation = {};\n            var target = {};\n\n            if (deviceSpec.Class) {\n                dvclist.push(deviceSpec.Class);\n\n                if (deviceSpec.CommSpec) {\n                    var it = null;\n                    if (full) {\n                        it = Data.getCommSpecItemsFull(deviceSpec);\n                    } else {\n                        it = Data.getCommSpecItems(deviceSpec.CommSpec);\n                    }\n\n                    if (it)\n                        target[deviceSpec.Class] = it.read;\n                }\n\n                var op = null;\n                if (full) {\n                    op = Data.getCommSpecOperationFull(deviceSpec.Class, deviceSpec.Type);\n                } else {\n                    op = Data.getCommSpecOperation(deviceSpec.Class, deviceSpec.Type);\n                }\n\n                if (op) {\n                    operation[deviceSpec.Class] = op;\n                }\n            }\n    \n            if (deviceSpec.Devices) {\n                var idx = 0;\n                deviceSpec.Devices.map((dvc) => {\n                    var name = idx++ + \":\" + dvc.Class;\n                    if (dvc.Name) {\n                        name += \":\" + dvc.Name;\n                    }\n                    dvclist.push(name);\n\n                    if (dvc.CommSpec) {\n                        var it = null;\n                        if (full) {\n                            it = Data.getCommSpecItemsFull(dvc);\n                        } else {\n                            it = Data.getCommSpecItems(dvc.CommSpec);\n                        }\n\n                        if (it)\n                            target[name] = it.read;\n                    }\n\n                    var op = null;\n                    if (full) {\n                        op = Data.getCommSpecOperationFull(dvc.Class, dvc.Type);\n                    } else {\n                        op = Data.getCommSpecOperation(dvc.Class, dvc.Type);\n                    }\n                    if (op) {\n                        operation[name] = op;\n                    }\n\n                    return dvc;\n                });\n            }\n\n            //this.state.deviceList = dvclist;\n            //this.state.operations = operation;\n            //this.state.targets = target;\n            this.setState({deviceList:dvclist, operations:operation, targets:target});\n        }\n    }\n\n    getParameter = () => {\n        if (this.state.command !== \"SET\") return (<></>);\n\n        var ops = this.state.operations[this.state.device];\n\n        if (ops) {\n            for(var i=0; i<ops.length; i++) {\n                var op = ops[i];\n                \n                if (op.Operation === this.state.operation) {\n                    if (op.Parameters) {\n                        return (\n                            <Panel header=\"Parameter\">\n                                <div className=\"p-d-flex\">\n                                    { op.Parameters.map((param, idx) => (\n                                        <div key={idx} className=\"p-inputgroup\" style={{width:\"200px\",marginRight:\"10px\"}}>\n                                            <span className=\"p-inputgroup-addon\">{param.Parameter}</span>\n                                            <InputText id={'param' + idx}></InputText>\n                                        </div>\n                                    )) }\n                                </div>\n                            </Panel>\n                        )\n                    }\n\n                    break;\n                }\n            }\n        }\n        return (<></>);\n    }\n\n    getTarget = () => {\n        if (this.state.command !== \"GET\") return (<></>);\n\n        var tgs = this.state.targets[this.state.device];\n\n        if (tgs) {\n            return (\n                <Panel header=\"Target\">\n                    <div className=\"p-grid\">\n                        { tgs.map((tg, idx) => (\n                            <div key={idx} className=\"p-col-fixed\">\n                                <div className=\"p-inputgroup\">\n                                    <span className=\"p-inputgroup-addon\">\n                                        <input type=\"checkbox\" id={\"target\" + idx}/>\n                                    </span>\n                                    <span className=\"p-inputgroup-addon\">{tg}</span>\n                                </div>\n                            </div>\n                        )) }\n                    </div>\n                </Panel>\n            )\n        }\n        return (<></>);\n    }\n\n    getExpect = () => {\n        if (this.state.command !== \"EXPECT\") return (<></>);\n\n        var tgs = this.state.targets[this.state.device];\n\n        if (tgs) {\n            return (\n                <Panel header=\"Target\">\n                    <div className=\"p-grid\">\n                        { tgs.map((tg, idx) => (\n                            <div key={idx} className=\"p-col-fixed\">\n                                <div className=\"p-inputgroup\">\n                                    <span className=\"p-inputgroup-addon\">\n                                        <input type=\"checkbox\" id={\"expectchk\" + idx}/>\n                                    </span>\n                                    <span className=\"p-inputgroup-addon\">{tg}</span>\n                                    <InputText style={{width:\"60px\"}} id={\"expect\" + idx}></InputText>\n                                </div>\n                            </div>\n                        )) }\n                    </div>\n                </Panel>\n            )\n        }\n        return (<></>);\n    }\n\n    onCreate = () => {\n\n        var doc = this.divRef.current.ownerDocument;\n\n        if (!this.state.deviceList || this.state.deviceList.length <= 0) {\n            alert('장비 규격 파일을 불러와야 합니다.');\n            return;\n        }\n\n        var json = {};\n        json.command = this.state.command;\n\n        if (this.state.command === \"SET\") {\n\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            if (!this.state.operation) {\n                alert('OPERATION을 선택해야 합니다.');\n                return;\n            }\n\n            var device = this.state.device;\n            /*if (device.indexOf(\"-\")) {\n                var spl = device.split(\"-\");\n                device = spl[0];\n            }*/\n            json.device = device;\n            json.operation = this.state.operation;\n\n            var ops = this.state.operations[this.state.device];\n\n            if (ops) {\n                for(var i=0; i<ops.length; i++) {\n                    var op = ops[i];\n                    \n                    if (op.Operation === this.state.operation) {\n                        if (op.Parameters) {\n                            json.parameters = [];\n                            for(var j=0; j<op.Parameters.length; j++) {\n                                var param = op.Parameters[j];\n                                \n                                var par = {};\n                                par = Object.assign(par, param);\n                                par = Object.assign(par, {value:doc.getElementById('param' + j).value});\n\n                                if (!par.value && par.MO === 'm') {\n                                    alert('Parameter ' + par.Parameter + '를 입력해야 합니다.');\n                                    return;\n                                }\n\n                                json.parameters.push(par);\n                            }\n                        }\n                    }\n                }\n            }\n        } else if (this.state.command === \"GET\") {\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            json.device = this.state.device;\n            \n            let tgs = this.state.targets[this.state.device];\n\n            if (tgs) {\n                let tgsstr = \"\";\n                for(i=0; i<tgs.length; i++) {\n                    let tg = tgs[i];\n\n                    let chk = doc.getElementById('target' + i).checked;\n                    if (chk) {\n                        if (tgsstr.length > 0)\n                            tgsstr += \",\";\n                        \n                        tgsstr += tg;\n                    }\n                }\n\n                if (tgsstr.length <= 0) {\n                    alert(\"하나 이상의 Target을 선택해야 합니다.\");\n                    return;\n                }\n\n                json.targets = tgsstr;\n            }\n        } else if (this.state.command === \"EXPECT\") {\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            json.device = this.state.device;\n            \n            let tgs = this.state.targets[this.state.device];\n\n            if (tgs) {\n                let tgsstr = \"\";\n                for(i=0; i<tgs.length; i++) {\n                    let tg = tgs[i];\n\n                    let chk = doc.getElementById('expectchk' + i).checked;\n                    if (chk) {\n                        let val = doc.getElementById('expect' + i).value;\n                        if (!val) {\n                            alert(\"선택한 Target의 값을 입력해야 합니다.\");\n                            return;\n                        }\n\n                        if (tgsstr.length > 0)\n                            tgsstr += \",\";\n                        \n                        tgsstr += tg + \":\" + val;\n                    }\n                }\n\n                if (tgsstr.length <= 0) {\n                    alert(\"하나 이상의 Target을 선택해야 합니다.\");\n                    return;\n                }\n\n                json.targets = tgsstr;\n            }\n        } else if (this.state.command === \"SLEEP\") {\n            let val = doc.getElementById('timeval').value;\n\n            if (!val) {\n                alert(\"시간값을 입력해야 합니다.\");\n                return;\n            }\n\n            json.time = val;\n        }\n\n        this.props.onCreate(json);\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        //options={this.state.operations[this.state.device] ? this.state.operations[this.state.device] : null}\n        return (\n            <div style={{height:\"240px\"}} ref={this.divRef}>\n                <div className=\"p-grid p-justify-between\">\n                <div className=\"p-grid p-justify-start\" style={{margin:\"0px\"}}>\n                    <div className=\"p-col-fixed\" style={{marginRight:\"0px\",width:\"240px\"}}>\n                        <Dropdown value={this.state.command} onChange={(e) => {\n                            this.setState({command:e.value}); }}\n                            options={[\"SET\",\"GET\", \"EXPECT\",\"SLEEP\"]}>\n                        </Dropdown>\n                    </div>\n                    {\n                        this.state.command !== \"SLEEP\" &&\n                        <div className=\"p-col-fixed\" style={{marginRight:\"0px\",width:\"240px\"}}>\n                            <Dropdown value={this.state.device} placeholder=\"DEVICE\" onChange={(e) => {\n                                this.setState({device:e.value, operation:null}); }}\n                                options={this.state.deviceList}>\n                            </Dropdown>\n                        </div>\n                    }\n                    {\n                        this.state.command === \"SET\" &&\n                        <div className=\"p-col-fixed\" style={{marginRight:\"0px\",width:\"240px\"}}>\n                            <Dropdown value={this.state.operation} placeholder=\"OPERATION\" onChange={(e) => {\n                                this.setState({operation:e.value}); }}\n                                optionLabel=\"Operation\" optionValue=\"Operation\"\n                                options={this.state.operations[this.state.device]}>\n                            </Dropdown>\n                        </div>\n                    }\n                </div>\n                <div className=\"p-col\"></div>\n                    <div className=\"p-col-fixed\">\n                        <Button className=\"p-button-secondary\" label=\"추가\" style={{width:\"80px\"}}\n                            onClick={this.onCreate}></Button>\n                    </div>\n                    </div>\n                <div>\n                    { this.getParameter() }\n                    { this.getTarget() }\n                    { this.getExpect() }\n                    {\n                        this.state.command === \"SLEEP\" &&\n                        <div className=\"p-inputgroup\" style={{width:\"230px\"}}>\n                            <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>Time(ms)</span>\n                            <InputText id=\"timeval\"></InputText>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NewWindow from 'react-new-window'\nimport TestSpec from './TestSpec'\n\n\nexport default class TestSpecPopup extends Component {\n    state = {\n        deviceSpec:null,\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.testRef = React.createRef();\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate(prevProps) {\n        \n    }\n\n    setDeviceSpec = (deviceSpec) => {\n        this.setState({deviceSpec:deviceSpec});\n    }\n\n    onCreate = (json) => {\n        \n        this.props.onCreate(json);\n    }\n\n    onUnload = () => {\n        this.setState({\n            command : \"SET\",\n            device : null,\n            deviceList : [],\n            operations:{},\n            targets:{},\n            operation:null\n        })\n    }\n\n    /*onMount = () => {\n        if (this.state.deviceSpec && this.testRef.current) {\n            this.testRef.current.setDeviceSpec(this.state.deviceSpec, true);\n        }\n    }*/\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onUnload} center={\"parent\"} title={\"예외요청 추가\"} features={{width:800, height:250}}>\n                    <div>\n                        <TestSpec\n                            ref={this.testRef} onCreate={this.onCreate} deviceSpec={this.state.deviceSpec}\n                            ></TestSpec>\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NewWindow from 'react-new-window'\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { Panel } from 'primereact/panel';\n\nexport default class TestSpecListPopup extends Component {\n    state = {\n        files : null,\n        selectFile : null,\n        fileData : null\n    }\n/*\n    constructor(props) {\n        super(props);\n    }\n*/\n    componentDidMount() {\n        this.getFiles();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.show !== this.props.show && this.props.show) {\n            this.getFiles();\n        }\n    }\n\n    getFiles = () => {\n\n        fetch(\"/testspeclist\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({files:result.files, selectFile : null, fileData : null});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onListSelect = (file) =>{\n        this.setState({selectFile:file});\n\n        fetch(\"/testspec?file=\" + file, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({fileData:result.data});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onLoad = () => {\n        if (this.state.selectFile == null || this.state.fileData == null) {\n            this.toastBL.show({severity:'error', detail:\"불러올 장비 규격 파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        this.props.onLoad(this.state.fileData, this.state.selectFile);\n    }\n\n    onFilesUnload = () => {\n        this.setState({files:null, selectFile:null, fileData:null});\n    }\n\n    onRemoveFile = () =>{\n        \n        if (this.state.selectFile == null) {\n            this.toastBL.show({severity:'error', detail:\"삭제할 시험파일을 선택하세요.\", life: 3000});\n            return;\n        }\n\n        fetch(\"/testspec?file=\" + this.state.selectFile, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 삭제 실패! \" + result.errormsg);\n                } else {\n                    this.getFiles();\n                }\n            },\n            (error) => {\n                alert(\"파일 삭제 실패! \" + error);\n            }\n        )\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onFilesUnload} center={\"parent\"} title={\"시험파일 불러오기\"} features={{width:1200, height:800}}>\n                    <div >\n                        <div className=\"p-grid p-justify-end\">\n                            <div className=\"p-col-2\" style={{margin:\"5px\",marginRight:\"10px\"}}>\n                                <Button className=\"p-button-secondary\" label=\"새로고침\" style={{width:\"100%\"}}\n                                    onClick={this.getFiles}></Button>\n                            </div>\n                        </div>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-fixed\" style={{width:\"310px\",paddingRight:\"0px\"}}>\n                                <Panel header=\"FILE\" style={{marginLeft:\"10px\"}}>\n                                {\n                                    this.state.files && this.state.files.length > 0 ?\n                                    <div className=\"heightPopup\">\n                                        {this.state.files.map((file, idx) => \n                                        <div key={idx}><Button key={idx + \"dvcspc\"} className={this.state.selectFile === file ? \"p-button-primary\" : \"p-button-outlined p-button-secondary\"} style={{minWidth:\"250px\", textAlign:\"start\", marginBottom:\"1px\"}} label={file} onClick={() => this.onListSelect(file)} ></Button><br/></div>\n                                        )}\n                                    </div>\n                                    :\n                                    <div>저장된 파일 없음</div>\n                                }\n                                </Panel>\n                            </div>\n                            <div className=\"p-col\">\n                                <Panel header=\"JSON\" style={{marginRight:\"10px\"}}>\n                                    <div className=\"heightPopup\" style={{marginBottom:\"0px\"}}>\n                                        <pre style={{fontSize:\"13px\"}}>\n                                            <code>\n                                                {this.state.fileData && this.state.fileData}\n                                            </code>\n                                        </pre>\n                                    </div>\n                                </Panel>\n                            </div>\n                        </div>\n                        <div className=\"p-grid p-justify-end\" style={{marginRight:\"10px\"}}>\n                            <div className=\"p-col-2\">\n                                <Button className=\"p-button-secondary\" label=\"불러오기\" style={{width:\"100%\"}}\n                                    onClick={this.onLoad}></Button>\n                            </div>\n                            <div className=\"p-col-2\">\n                                <Button className=\"p-button-secondary\" label=\"삭제\" style={{width:\"100%\"}}\n                                    onClick={this.onRemoveFile}></Button>\n                            </div>\n                        </div>\n                        <Toast ref={(el) => this.toastBL = el} position=\"bottom-right\" />\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NewWindow from 'react-new-window'\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport {InputSwitch} from 'primereact/inputswitch';\nimport './ExcuteTest.css';\n\nexport default class ExcuteTest extends Component {\n    state = {\n        deviceList : [],\n        selectDevice : null,\n        slaveList : [],\n        selectSlave : null,\n        invalidDevice : false,\n        imageURL : null,\n        imageURLDetail : null,\n        isLoading : false,\n        errorMsg : null,\n        detail : false\n    }\n\n    deviceSpec = null;\n    testSpec = null;\n\n    componentDidMount() {\n        let sl = [];\n        for(let i=1; i <= 247; i++ ) {\n            sl.push(i);\n        }\n\n        this.setState({slaveList:sl, selectSlave:1});\n    }\n\n    setSpec = (device, test) => {\n        console.log(device);\n        console.log(test);\n\n        this.deviceSpec = device;\n        this.testSpec = test;\n\n        this.getSerialport();\n    }\n\n    getSerialport = () => {\n        fetch(\"/serialport\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"장비 검색 실패! \" + result.errormsg);\n                } else {\n                    //console.log(result.ports);\n                    this.setState({deviceList:result.ports}, () => {\n                        if (this.state.deviceList.length > 0) {\n                            this.setState({selectDevice:this.state.deviceList[0]})\n                        }\n                    });\n                }\n            },\n            (error) => {\n                alert(\"장비 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onChangeDevice = (e) => {\n        this.setState({selectDevice:e.value, invalidDevice:false});\n    }\n\n    onChangeSlave = (e) => {\n        this.setState({selectSlave:e.value});\n    }\n\n    onUnload = () => {\n        this.props.unload();\n\n        this.setState({selectDevice:null, invalidDevice:false, imageURL:null, isLoading:false,errorMsg:null});\n    }\n\n    startTest = () => {\n        if (this.state.selectDevice == null) {\n            this.setState({invalidDevice:true});\n            return;\n        }\n\n        this.setState({isLoading:true,imageURL:null,errorMsg:null});\n\n        fetch(\"/serialport\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                path: this.state.selectDevice,\n                device: this.deviceSpec,\n                test: this.testSpec,\n                slave: this.state.selectSlave\n            }),\n            method: 'POST'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({isLoading:false});\n                if (result.result !== \"success\") {\n                    console.log(result);\n                    this.setState({errorMsg:result.errormsg})\n                } else {\n                    this.setState({imageURL:result.url, imageURLDetail:result.urldetail});\n                }\n            },\n            (error) => {\n                this.setState({isLoading:false, errorMsg:error});\n            }\n        )\n    }\n\n    render(){\n        return (\n            <>\n                { this.props.show &&\n                <NewWindow onUnload={this.onUnload} center={\"parent\"} title={\"장비 시험\"} features={{width:800, height:800}} style={{fontSize:\"12px\"}}>\n                    <>\n                        <div className=\"p-grid\" style={{margin:\"20px 10px 10px 10px\",fontSize:\"12px\"}}>\n                            <div className=\"p-col\">\n                                <div className=\"p-field p-fluid\">\n                                    <span className=\"p-float-label\">\n                                        <Dropdown className={this.state.invalidDevice ? \"p-invalid p-mr-2\" : null} value={this.state.selectDevice} options={this.state.deviceList} onChange={this.onChangeDevice}></Dropdown>\n                                        <label htmlFor=\"dropdown\">장비 선택</label>\n                                    </span>\n                                    {\n                                        this.state.invalidDevice &&\n                                        <small id=\"username-help\" className=\"p-invalid\">장비를 선택해야 합니다.</small>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"p-col\">\n                                <span className=\"p-float-label\">\n                                    <Dropdown value={this.state.selectSlave} options={this.state.slaveList} onChange={this.onChangeSlave}></Dropdown>\n                                    <label htmlFor=\"dropdown\">Slave</label>\n                                </span>\n                            </div>\n                            <div className=\"p-col\">\n                                <Button className=\"p-button-secondary\" label=\"시험 시작\" onClick={this.startTest}></Button>\n                            </div>\n                        </div>\n                        <div className=\"p-grid\" style={{margin:\"0px 10px 10px 20px\"}}>\n                            <h6 style={{marginRight:\"10px\"}}>상세보기</h6>\n                            <InputSwitch checked={this.state.detail} onChange={(e) => this.setState({detail:e.value})}/>\n                        </div>\n                        <div className=\"p-grid p-justify-center result-area\">\n                            <div className=\"p-col-align-center\">\n                                {this.state.isLoading &&\n                                    <ProgressSpinner/>}\n                                { (this.state.detail && this.state.imageURLDetail ) &&\n                                        <img alt=\"이미지 불러오기 실패!\" src={this.state.imageURLDetail}/>}\n                                { (!this.state.detail && this.state.imageURL ) &&\n                                    <img alt=\"이미지 불러오기 실패!\" src={this.state.imageURL}/>}\n                                {this.state.errorMsg &&\n                                    <h3>시험 실패!<br/>{this.state.errorMsg}</h3>\n                                }\n                            </div>\n                        </div>\n                    </>\n                </NewWindow>\n                }\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport DeviceSpecPopup from './DeviceSpecPopup'\nimport TestSpecPopup from './TestSpecPopup'\nimport TestSpecListPopup from './TestSpecListPopup'\nimport TestSpec from './TestSpec'\nimport ExcuteTest from \"./ExcuteTest\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { confirmPopup } from 'primereact/confirmpopup';\nimport { Toast } from 'primereact/toast';\nimport './SequenceManage.css'\n\nexport default class SequenceManage extends Component {\n    state = {\n        showFiles : false,\n        showTestFiles : false,\n        loadJson : null,\n        loadFile : null,\n        showCreate : false,\n        showTest : false,\n        tests : [],\n        //saveAlert : false,\n        //saveResult : false,\n        overwrite : false,\n        //saveErrorMessage : null,\n        //overwriteMessage : null,\n        rowSelected : null\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.dvcPopRef = React.createRef();\n        this.testRef = React.createRef();\n        this.testListRef = React.createRef();\n        this.testPopRef = React.createRef();\n        this.excuteTestRef = React.createRef();\n    }\n\n    onShowFiles = () => {\n        //this.getFiles();\n        this.setState({showFiles:false}, () => {\n            this.setState({showFiles:true});\n        });\n    }\n\n    onShowTestFiles = () => {\n        //this.getFiles();\n        this.setState({showTestFiles:false}, () => {\n            this.setState({showTestFiles:true});\n        });\n    }\n\n    onLoad = (json, name) => { \n        this.setState({loadJson:json, loadFile:name, showFiles:false});\n        this.testRef.current.setDeviceSpec(json);\n    }\n\n    onTestLoad = (data, name) => { \n        var datas = data.split(\"\\n\");\n        var tests = []\n        datas.map((test,id) => {\n            if (test.trim().length > 0)\n                tests.push({id:id,test:test});\n            return test;\n        });\n\n        document.getElementById('testSpecNameInput').value = name;\n        this.setState({tests:tests, showTestFiles:false});\n        //this.testRef.current.setDeviceSpec(json);\n    }\n\n    onCreateTest = () => {\n\n        if (this.state.loadFile === null) {\n            //alert('장비 규격 파일을 불러와야 합니다.');\n            this.toastTL.show({severity:'error', summary: 'Error', detail:'장비 규격 파일을 불러와야 합니다.', life: 3000});\n            return;\n        }\n\n        this.setState({showCreate:false}, () => {\n            this.testPopRef.current.setDeviceSpec(this.state.loadJson, true);\n            this.setState({showCreate:true});\n        });\n    }\n\n    /*setSaveMsg = (result, msg) => {\n        this.setState({saveResult:result, saveErrorMessage:msg, saveAlert:true});\n    }*/\n\n    overwriteClick = () => {\n        this.setState({overwrite:true/*, overwriteMessage:false, saveAlert:false*/}, () => {\n            this.saveClick();\n            this.setState({overwrite:false});\n        });\n        \n        \n    }\n\n    getTestSpec = () => {\n        /*var testSpec = \"\";\n\n        this.state.tests.map((test, idx) => {\n            testSpec += test + \"\\n\";\n        });\n\n        return testSpec;*/\n        return this.state.tests;\n    }\n\n    saveClick = (event) => {\n        var testSpecName = document.getElementById('testSpecNameInput').value;\n        if (!testSpecName) {\n            //this.setSaveMsg(false, '시험파일 이름을 입력하세요.');\n            this.toastBL.show({severity:'error', summary: 'Error', detail:'시험파일 이름을 입력하세요.', life: 3000});\n            return;\n        }\n\n        let testSpec = this.getTestSpec();\n\n        if (!testSpec || testSpec.length <= 0) {\n            //this.setSaveMsg(false, '저장할 시험파일 내용이 없습니다.');\n            this.toastBL.show({severity:'error', summary: 'Error', detail:'저장할 시험파일 내용이 없습니다.', life: 3000});\n            return;\n        }\n\n        let overwriteConfirm = {\n            target: event ? event.currentTarget : null,\n            message: '동일한 이름의 시험 파일이 있습니다. 덮어쓰시겠습니까?',\n            icon: 'pi pi-exclamation-triangle',\n            acceptLabel:'예',\n            rejectLabel:'아니오',\n            accept: this.overwriteClick,\n            reject: null\n        };\n\n        fetch(\"/testspec\", {\n            body: JSON.stringify({\n                name: testSpecName,\n                overwrite: this.state.overwrite,\n                data: testSpec}),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result === \"error\") {\n                    //this.setSaveMsg(false, result.errormsg);\n                    this.toastBL.show({severity:'error', summary: 'Error', detail:result.errormsg, life: 3000});\n                } else if (result.result === \"duplicate\") {\n                    //this.state.overwriteMessage = true;\n                    //this.setSaveMsg(false, null);\n                    confirmPopup(overwriteConfirm);\n                } else if (result.result === \"success\") {\n                    //this.setSaveMsg(true, result.file);\n                    this.toastBL.show({severity:'success', summary: '저장 성공', detail:result.file, life: 3000});\n                } else {\n                    //this.setSaveMsg(false, result.errormsg);\n                    this.toastBL.show({severity:'error', summary: 'Error', detail:result.errormsg, life: 3000});\n                }\n            },\n            (error) => {\n                //this.setSaveMsg(false, error);\n                this.toastBL.show({severity:'error', summary: 'Error', detail:error, life: 3000});\n            }\n        )\n    }\n\n    onCreate = (json) => {\n        if (!json) return;\n        //console.log(json);\n        var cmd = json.command + \" \";\n        if (json.command === \"SET\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n            cmd += \"OPERATION=\" + json.operation;\n\n            if (json.parameters && json.parameters.length > 0) {\n                var paramstr = \"\";\n                for(var i=0; i<json.parameters.length; i++) {\n                    var param = json.parameters[i];\n\n                    if (param.value) {\n                        if (paramstr.length > 0) \n                            paramstr += \",\";\n                        paramstr += param.Parameter;\n                        paramstr += \":\" + param.value;\n                    }\n                }\n\n                if (paramstr.length > 0) \n                    cmd += \" PARAMETER=\" + paramstr;\n            }\n        } else if (json.command === \"GET\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n\n            if (json.targets) {\n                cmd += \"TARGET=\" + json.targets;\n            }\n        } else if (json.command === \"EXPECT\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n\n            if (json.targets) {\n                cmd += \"TARGET=\" + json.targets;\n            }\n        } else if (json.command === \"SLEEP\") {\n            cmd += \"TIME=\" + json.time; \n        }\n\n        this.state.tests.push({id:this.state.tests.length,test:cmd});\n        this.setState({tests:this.state.tests});\n        \n    }\n\n    testClick = () => {\n        if (this.state.loadFile === null) {\n            //alert('장비 규격 파일을 불러와야 합니다.');\n            this.toastBR.show({severity:'error', summary: 'Error', detail:'장비 규격 파일을 불러와야 합니다.', life: 3000});\n            return;\n        }\n\n        let testSpec = this.getTestSpec();\n\n        if (!testSpec || testSpec.length <= 0) {\n            //alert('시험할 내용이 없습니다.');\n            this.toastBR.show({severity:'error', summary: 'Error', detail:'시험할 내용이 없습니다.', life: 3000});\n            return;\n        }\n\n        this.setState({showTest:true}, () => {\n            this.excuteTestRef.current.setSpec(this.state.loadJson, testSpec);\n        });\n    }\n\n    testUnload = () => {\n        this.setState({showTest:false});\n    }\n\n    onRowReorder = (e) => {\n        if (this.state.rowSelected == null) {\n            this.setState({tests:e.value});\n        } else {\n            let mvitem = [];\n            let mvid = [];\n\n            this.state.rowSelected.map((item) => {\n                mvid.push(item.id);\n                return item;\n            });\n\n            this.state.tests.map((item) => {\n                if (mvid.indexOf(item.id) >= 0) {\n                    mvitem.push({id:item.id, test:String(item.test)});\n                    item.test = '!@!@!';\n                }\n                return item;\n            });\n\n            for(let i=mvitem.length - 1; i>=0; i--) {\n                this.state.tests.splice(e.dropIndex, 0, mvitem[i]);\n            }\n\n            for(let i=this.state.tests.length - 1; i>=0; i--) {\n                if (this.state.tests[i].test === '!@!@!') {\n                    this.state.tests.splice(i, 1);\n                }\n            }\n\n            this.setState({tests:this.state.tests, rowSelected:null});\n        }\n    }\n\n    onSelectCopy = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) return;\n\n        let mvid = [];\n        let mvitem = [];\n\n        this.state.rowSelected.map((item) => {\n            mvid.push(item.id);\n            return item;\n        });\n\n        let idx = this.state.tests.length;\n\n        this.state.tests.map((item) => {\n            if (mvid.indexOf(item.id) >= 0) {\n                mvitem.push({id:idx++, test:String(item.test)});\n            }\n            return item;\n        });\n\n        mvitem.map((item) => {\n            this.state.tests.push(item);\n            return item;\n        });\n\n        this.setState({tests:this.state.tests});\n    }\n\n    /*onSelectEdit = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) {\n            alert('수정할 항목을 선택하세요.');\n            return;\n        }\n\n        if (this.state.rowSelected.length > 1) {\n            alert('하나의 항목만 선택하세요.');\n            return;\n        }\n\n\n    }*/\n\n    onSelectDelete = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) return;\n\n        this.state.rowSelected.map((item) => {\n            for(let i=this.state.tests.length - 1; i>=0; i--) {\n                if (this.state.tests[i].id === item.id) {\n                    this.state.tests.splice(i, 1);\n                    break;\n                }\n            }\n            return item;\n        });\n\n        this.setState({tests:this.state.tests});\n    }\n\n    testEditor = (props) => {\n        return <InputText style={{width:\"100%\"}} type=\"text\" value={props.rowData['test']} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    onEditorValueChange = (props, value) => {\n        this.state.tests[props.rowIndex].test = value;\n        this.setState({tests:this.state.tests});\n    }\n    \n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                <ExcuteTest\n                    ref={this.excuteTestRef}\n                    show={this.state.showTest}\n                    unload={this.testUnload}\n                ></ExcuteTest>\n                <DeviceSpecPopup \n                    ref={this.dvcPopRef}\n                    show={this.state.showFiles} load={true} onLoad={this.onLoad}\n                    ></DeviceSpecPopup>\n                <TestSpecListPopup \n                    ref={this.testListRef}\n                    show={this.state.showTestFiles} onLoad={this.onTestLoad}\n                    ></TestSpecListPopup>\n                <TestSpecPopup\n                    ref={this.testPopRef}\n                    show={this.state.showCreate} onCreate={this.onCreate}></TestSpecPopup>\n                <div style={{backgroundColor:'#f8f9fa'}}>\n                    <div className=\"p-grid\">\n                        <div className=\"p-col-fixed\" style={{width:\"600px\",marginLeft:\"10px\",marginTop:\"10px\"}}>\n                            <div className=\"p-inputgroup\">\n                                <Button className=\"p-button-secondary\" label=\"장비 규격 파일 불러오기\" style={{width:\"200px\"}}\n                                    onClick={this.onShowFiles}></Button>\n                                <span className=\"p-inputgroup-addon\" style={{width:\"400px\"}}>{this.state.loadFile}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card\" style={{margin:\"10px\",padding:\"10px\"}}>\n                        <TestSpec\n                                ref={this.testRef} onCreate={this.onCreate}\n                        ></TestSpec>\n                    </div>\n                    <div className=\"p-grid p-justify-start\" style={{margin:\"10px\"}}>\n                        <div className=\"p-col-fixed\" style={{width:\"250px\"}}>\n                            <Button className=\"p-button-secondary\" label=\"시험 파일 불러오기\" style={{width:\"200px\"}}\n                                onClick={this.onShowTestFiles}></Button>\n                        </div>\n                        <div className=\"p-col-fixed\" style={{width:\"250px\"}}>\n                            <Button className=\"p-button-secondary\" label=\"예외요청 생성\" style={{width:\"200px\"}}\n                                onClick={this.onCreateTest}></Button>\n                        </div>\n                        <div className=\"p-col-fixed\" style={{width:\"250px\"}}>\n                            <Button className=\"p-button-secondary\" label=\"선택항목 복사\" style={{width:\"200px\"}}\n                                onClick={this.onSelectCopy}></Button>\n                        </div>\n                        <div className=\"p-col-fixed\" style={{width:\"250px\"}}>\n                            <Button className=\"p-button-secondary\" label=\"선택항목 삭제\" style={{width:\"200px\"}}\n                                onClick={this.onSelectDelete}></Button>\n                        </div>\n                    </div>\n                    <div className=\"grid\">\n                        <DataTable value={this.state.tests} editMode=\"cell\" className=\"p-datatable-sm editable-cells-table\"\n                            onRowReorder={this.onRowReorder}\n                            selectionMode=\"multiple\" dataKey=\"id\" selection={this.state.rowSelected} onSelectionChange={e => this.setState({rowSelected:e.value})}>\n                            <Column rowReorder style={{width:'3em'}}></Column>\n                            <Column key='id' columnKey='test' field='test' editor={(props) => this.testEditor(props)}></Column>\n                        </DataTable>\n                        {/*this.state.tests.map((test, idx) => (\n                            <div className=\"testitem\" key={idx}>\n                                <p>{test}</p>\n                            </div>\n                        ))*/}\n                    </div>\n                    <div className=\"p-grid p-justify-between\" style={{margin:\"10px\"}}>\n                        <div className=\"p-col-fixed\" style={{width:\"500px\"}}>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\" style={{width:\"130px\"}}>시험 파일 이름</span>\n                                <InputText id=\"testSpecNameInput\" onKeyUp={this.setDeviceSpecName} ></InputText>\n                                <Button className=\"p-button-secondary\" label=\"저장\" style={{width:\"100px\"}}\n                                    onClick={this.saveClick}></Button>\n                            </div>\n                        </div>\n                        <div className=\"p-col-fixed\" style={{width:\"120px\"}}>\n                            <Button className=\"p-button-secondary\" label=\"장비 시험\" \n                                onClick={this.testClick}></Button>\n                        </div>\n                    </div>\n                </div>\n                <Toast ref={(el) => this.toastTL = el} position=\"top-left\" />\n                <Toast ref={(el) => this.toastBL = el} position=\"bottom-left\" />\n                <Toast ref={(el) => this.toastBR = el} position=\"bottom-right\" />\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport EquipManage from './EquipManage'\nimport SequenceManage from './SequenceManage'\n\n\nexport default class Router extends Component {\n    \n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            \n                <>\n                    <Switch>\n                        <Route path=\"/equip\" exact component={EquipManage}/>\n                        <Route path=\"/sequence\" exact component={SequenceManage}/>\n                        <Redirect from=\"*\" to=\"/equip\" />\n                    </Switch>\n                </>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap'\n\n//export default withRouter(({ location : {pathname}} ) => (\n    export default () => (\n    /*<header className=\"nav\" style={{backgroundColor:'#353535'}}>\n        <ul>\n            <div className=\"navheader\">\n                <li>\n                    <a href=\"/\">ETRI SmartFarm</a>\n                </li>\n            </div>\n            <div className={pathname === \"/equip\" ? \"navcurrent\" : \"nav\" }>\n                <li>\n                    <a href=\"/equip\">장비 규격 관리</a>\n                </li>\n            </div>\n            <div className={pathname === \"/sequence\" ? \"navcurrent\" : \"nav\" }>\n                <li>\n                    <a href=\"/sequence\">시험 규격 관리</a>\n                </li>\n            </div>\n        </ul>\n    </header>*/\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n        <Navbar.Brand href=\"/equip\">ETRI SmartFarm</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/equip\">장비 규격 관리</Nav.Link>\n            <Nav.Link as={Link} to=\"/sequence\">시험 규격 관리</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n    /*<div>\n        <TabMenu model={items}/>\n    </div>*/\n);","import React, { Component } from 'react';\nimport Router from './Router';\nimport Header from './Header';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = \"SmartFarm\";\n  }\n\n  render(){\n    return (\n      <BrowserRouter>\n        <>\n          <Header/>\n          <Router/>\n        </>\n      </BrowserRouter>\n    ); \n  }\n}\n\nObject.equals = function(x, y) { \n  if (x === y) return true;\n  // if both x and y are null or undefined and exactly the same \n  if (!(x instanceof Object) || !(y instanceof Object)) return false; // if they are not strictly equal, they both need to be Objects \n  if (x.constructor !== y.constructor) return false; // they must have the exact same prototype chain, the closest we can do is // test there constructor. \n  for (var p in x) { \n      if (!x.hasOwnProperty(p)) continue; \n      // other properties were tested using x.constructor === y.constructor \n      if (!y.hasOwnProperty(p)) return false; \n      // allows to compare x[ p ] and y[ p ] when set to undefined \n      if (x[p] === y[p]) continue; \n      // if they have the same strict value or identity then they are equal \n      if (typeof(x[p]) !== \"object\") return false; \n      // Numbers, Strings, Functions, Booleans must be strictly equal \n      if (!Object.equals(x[p], y[p])) return false; \n      // Objects and Arrays must be tested recursively \n  } \n  \n  for (p in y) { \n      if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false; \n      // allows x[ p ] to be set to undefined \n  }\n  \n  return true; \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}