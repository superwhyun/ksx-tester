{"version":3,"sources":["CommSpec.js","data.js","CommSpecComponent.js","DeviceSpecPopup.js","EquipManage.js","TestSpec.js","TestSpecPopup.js","TestSpecListPopup.js","ExcuteTest.js","SequenceManage.js","Router.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["item","name","mo","CommSpec","addOuter","cmspc","json","getCommSpec","cls","type","subtype","read","write","items","push","operationSpec","Class","Type","Operations","Operation","Value","Parameters","Parameter","MO","deviceClasses","deviceTypes","node","sensor","actuator","misc","deviceSubTypes","sensor_node","actuator_node","integrated_node","retractable","switch","nutrient_supply","valueUnit","sd","getCommSpecItems","rslt","spec","undefined","getLastSubtype","fulltype","String","indexOf","split","subs","replace","length","getCommSpecItemsFull","map","getCommSpecOperation","i","op","getCommSpecOperationFull","placeholder","document","createElement","className","key","CommSpecComponebt","props","state","readStartingRegister","writeStartingRegister","readItems","writeItems","savedCommSpec","refresh","updateCommSpec","commSpec","setState","matchCommSpec","onChanged","setCommSpec","readitem","writeitem","idx","readStartingVal","val","target","value","parsed","parseInt","writeStartingVal","optionBtn","dragStart","e","dragged","currentTarget","style","backgroundColor","parentNode","appendChild","dragOver","preventDefault","tagName","over","insertBefore","readDragEnd","dragEnd","writeDragEnd","removeChild","dataset","id","from","Number","to","splice","result","this","prevProps","marginLeft","onChange","onDragOver","data-id","draggable","onDragStart","onDragEnd","Button","float","margin","size","variant","onClick","Component","DeviceSpecPopup","files","selectFile","fileJson","addDeviceMessage","errorMsg","class","canModify","canLoad","setClass","getFiles","fetch","headers","method","then","res","alert","errormsg","error","onListSelect","file","window","onFilesUnload","onAddDevice","onRemoveFile","onModify","onLoad","onDownload","console","log","blob","Blob","JSON","stringify","saveAs","onUpload","modify","load","show","onUnload","center","title","features","width","height","Container","fluid","Row","marginBottom","Col","xs","minWidth","textAlign","borderLeft","marginTop","marginRight","position","bottom","right","opacity","Alert","onClose","dismissible","left","mode","url","accept","maxFileSize","auto","chooseLabel","multiple","EquipManage","showFiles","model","valueunit","valueunitetc","channel","deviceSpecName","saveAlert","saveResult","saveErrorMessage","overwrite","overwriteMessage","addDeviceList","setModel","getElementById","setName","setChannel","setValueUnitEtc","setDeviceSpecName","setSaveMsg","msg","overwriteClick","saveClick","onShowFiles","setJson","onCommSpecChange","csCmpRef","current","dvcPopRef","types","Model","Name","ValueUnit","ValueType","SignificantDigit","Channel","Devices","dvclist","dvc","onRemoveFromDeviceList","body","getJson","isSensor","chn","isNaN","cs","Object","keys","devices","React","createRef","itemKey","ref","Dropdown","onSelect","eventKey","event","Toggle","Menu","Data","Item","deviceClass","deviceType","onKeyUp","border","background","borderRadius","paddingLeft","display","verticalAlign","Heading","TestSpec","command","device","deviceList","operations","targets","operation","devicespec","setDeviceSpec","deviceSpec","full","equals","it","getParameter","ops","padding","param","getTarget","tgs","tg","getExpect","onCreate","doc","divRef","ownerDocument","parameters","j","par","assign","tgsstr","checked","time","TestSpecPopup","testRef","TestSpecListPopup","fileData","data","ExcuteTest","selectDevice","slaveList","selectSlave","invalidDevice","imageURL","imageURLDetail","isLoading","detail","testSpec","setSpec","test","getSerialport","ports","onChangeDevice","onChangeSlave","unload","startTest","path","slave","urldetail","sl","fontSize","options","htmlFor","label","alt","src","SequenceManage","showTestFiles","loadJson","loadFile","showCreate","showTest","tests","rowSelected","onShowTestFiles","onTestLoad","datas","trim","onCreateTest","testPopRef","getTestSpec","testSpecName","cmd","paramstr","testClick","excuteTestRef","testUnload","onRowReorder","mvitem","mvid","dropIndex","onSelectCopy","onSelectDelete","testEditor","rowData","onEditorValueChange","rowIndex","testListRef","editMode","selectionMode","dataKey","selection","onSelectionChange","rowReorder","columnKey","field","editor","Router","exact","component","Navbar","bg","expand","Brand","href","aria-controls","Collapse","Nav","Link","as","App","Header","x","y","constructor","p","hasOwnProperty","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a570fa67.chunk.js","sourcesContent":["function item(name, mo = \"m\") {\n    return {item:name, mo:mo};\n}\n\nconst CommSpec = {\n    addOuter: function(cmspc) {\n        let json = {};\n        json[\"KS-X-3267:2021\"] = cmspc;\n        return json;\n    },\n/*\n    getCommSpecJson: function(cls, type, subtype) {\n        var json = {};\n        var read = {};\n        var write = null;\n\n        if  (cls === \"node\") {\n            read[\"starting-register\"] = 201;\n\n            read.items = [\n                \"status\"\n            ];\n\n            if (subtype === \"level0\") {\n                write = null;\n            } else if (subtype !== \"level0\" && subtype !== null) {\n                read.items.push(\"opid\");\n                read.items.push(\"control\");\n                \n                write = {};\n                write[\"starting-register\"] = 301;\n                write.items = [\"operation\", \"opid\"];\n\n                if (subtype === \"level2\") {\n                    \n                    write.items.push(\"control\");\n                }\n            }\n        }\n\n        if  (cls === \"sensor\") {\n\n            if (type === \"temperature-sensor\")\n                read[\"starting-register\"] = 202;\n            else if (type === \"humidity-sensor\")\n                read[\"starting-register\"] = 205;\n            else if (type === \"CO2-sensor\")\n                read[\"starting-register\"] = 208;\n            else if (type === \"pyranometer-sensor\")\n                read[\"starting-register\"] = 211;\n            else if (type === \"wind-direction-sensor\")\n                read[\"starting-register\"] = 214;\n            else if (type === \"wind-speed-sensor\")\n                read[\"starting-register\"] = 217;\n            else if (type === \"rain-detector-sensor\")\n                read[\"starting-register\"] = 220;\n            else if (type === \"quantum-sensor\")\n                read[\"starting-register\"] = 223;\n            else if (type === \"soil-moisture-sensor\")\n                read[\"starting-register\"] = 226;\n            else if (type === \"tensiometer-sensor\")\n                read[\"starting-register\"] = 229;\n            else if (type === \"EC-sensor\")\n                read[\"starting-register\"] = 232;\n            else if (type === \"pH-sensor\")\n                read[\"starting-register\"] = 235;\n            else if (type === \"soil-temperature-sensor\")\n                read[\"starting-register\"] = 238;\n            else if (type === \"flow-sensor\")\n                read[\"starting-register\"] = 241;\n            else if (type === \"voltage-sensor\")\n                read[\"starting-register\"] = 244;\n            else if (type === \"current-sensor\")\n                read[\"starting-register\"] = 247;\n\n            read.items = [\n                \"value\",\n                \"status\",\n            ];\n        }\n\n        if  (cls === \"actuator\") {\n            read[\"starting-register\"] = 208;\n\n            if (type === \"retractable\") {\n                read.items = [\n                    \"status\"\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [\"operation\", \"opid\"];\n                } else if (subtype === \"level1\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"position\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [\"operation\", \"opid\", \"time\"];\n                } else if (subtype === \"level2\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"position\");\n                    read.items.push(\"remain-time\");\n                    read.items.push(\"opentime\");\n                    read.items.push(\"closetime\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        \"operation\", \n                        \"opid\", \n                        \"time\",\n                        \"position\",\n                        \"opentime\",\n                        \"closetime\"\n                    ];\n                }\n            } else if (type === \"switch\") {\n                read.items = [\n                    \"status\"\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\"operation\", \"opid\"];\n                } else if (subtype === \"level1\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\"operation\", \"opid\", \"hold-time\"];\n                } else if (subtype === \"level2\") {\n                    read.items.push(\"opid\");\n                    read.items.push(\"state-hold-time\");\n                    read.items.push(\"ratio\");\n                    read.items.push(\"remain-time\");\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        \"operation\", \n                        \"opid\", \n                        \"hold-time\",\n                        \"ratio\"\n                    ];\n                }\n            } else if (type === \"nutrient-supply\") {\n                read.items = [\n                    \"opid\",\n                    \"status\",\n                    \"area\",\n                    \"alert\"\n                ];\n\n                write = {};\n                write[\"starting-register\"] = 311;\n                write.items = [\n                    \"operation\", \n                    \"opid\", \n                    \"control\",\n                ];\n\n                if (subtype === \"level1\") {\n                    write.items.push(\"EC\");\n                    write.items.push(\"pH\");\n                    write.items.push(\"on-sec\");\n                    write.items.push(\"start-area\");\n                    write.items.push(\"stop-area\");\n                }\n            }\n        }\n\n        if (cls === \"misc\") {\n            if (type === \"display\") {\n                read[\"starting-register\"] = 301;\n                read.items = [\n                    \"opid\",\n                    \"status\"\n                ];\n                \n                write = {};\n                write[\"starting-register\"] = 401;\n                write.items = [\n                    \"operation\", \n                    \"opid\",\n                    \"epoch\",\n                    \"vfloat\",\n                    \"vfloat\",\n                    \"vint\",\n                    \"vint\"\n                ];\n            } else {\n                read = null;\n            }\n            \n        }\n\n        if (read !== null)\n            json.read = read;\n        if (write !== null)\n            json.write = write;\n\n        return this.addOuter(json);\n    },\n*/\n    getCommSpec: function(cls, type, subtype) {\n        let json = {};\n        let read = {};\n        let write = null;\n\n        if (cls === null || type === null) return null;\n\n        if  (cls === \"node\") {\n            read[\"starting-register\"] = 201;\n\n            read.items = [\n                item(\"status\")\n            ];\n\n            if (subtype === \"level0\") {\n                write = null;\n            } else if (subtype == \"level1\") {\n                read.items.push(item(\"opid\"));\n                read.items.push(item(\"control\"));\n                \n                write = {};\n                write[\"starting-register\"] = 301;\n                write.items = [item(\"operation\"), item(\"opid\"), item(\"control\")];\n            }\n        }\n\n        if  (cls === \"sensor\") {\n            if (type === \"temperature-sensor\")\n                read[\"starting-register\"] = 202;\n            else if (type === \"humidity-sensor\")\n                read[\"starting-register\"] = 205;\n            else if (type === \"CO2-sensor\")\n                read[\"starting-register\"] = 208;\n            else if (type === \"pyranometer-sensor\")\n                read[\"starting-register\"] = 211;\n            else if (type === \"wind-direction-sensor\")\n                read[\"starting-register\"] = 214;\n            else if (type === \"wind-speed-sensor\")\n                read[\"starting-register\"] = 217;\n            else if (type === \"rain-detector-sensor\")\n                read[\"starting-register\"] = 220;\n            else if (type === \"quantum-sensor\")\n                read[\"starting-register\"] = 223;\n            else if (type === \"soil-moisture-sensor\")\n                read[\"starting-register\"] = 226;\n            else if (type === \"tensiometer-sensor\")\n                read[\"starting-register\"] = 229;\n            else if (type === \"EC-sensor\")\n                read[\"starting-register\"] = 232;\n            else if (type === \"pH-sensor\")\n                read[\"starting-register\"] = 235;\n            else if (type === \"soil-temperature-sensor\")\n                read[\"starting-register\"] = 238;\n            else if (type === \"flow-sensor\")\n                read[\"starting-register\"] = 241;\n            else if (type === \"voltage-sensor\")\n                read[\"starting-register\"] = 244;\n            else if (type === \"current-sensor\")\n                read[\"starting-register\"] = 247;\n\n            read.items = [\n                item(\"value\"),\n                item(\"status\"),\n            ];\n        }\n\n        if  (cls === \"actuator\") {\n            read[\"starting-register\"] = 208;\n\n            if (type === \"retractable\") {\n                read.items = [\n                    item(\"status\"),\n                ];\n\n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [item(\"operation\")];\n                } else if (subtype === \"level1\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"position\", \"o\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 212;\n                    write.items = [item(\"operation\"), item(\"opid\"), item(\"time\")];\n                } else if (subtype === \"level2\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"position\"));\n                    read.items.push(item(\"remain-time\"));\n                    read.items.push(item(\"opentime\"));\n                    read.items.push(item(\"closetime\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"), \n                        item(\"opid\"), \n                        item(\"time\"),\n                        item(\"position\"),\n                        item(\"opentime\"),\n                        item(\"closetime\")\n                    ];\n                }\n            } else if (type === \"switch\") {\n                read.items = [\n                    item(\"opid\"),\n                ];\n    \n                if (subtype === \"level0\") {\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [item(\"operation\")];\n                } else if (subtype === \"level1\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [item(\"operation\"), item(\"opid\"), item(\"hold-time\")];\n                } else if (subtype === \"level2\") {\n                    read.items.push(item(\"opid\"));\n                    read.items.push(item(\"state-hold-time\", \"o\"));\n                    read.items.push(item(\"ratio\"));\n                    read.items.push(item(\"remain-time\"));\n                    \n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"), \n                        item(\"opid\"), \n                        item(\"hold-time\"),\n                        item(\"ratio\")\n                    ];\n                }\n            } else if (type === \"nutrient-supply\") {\n                read.items = [\n                    item(\"status\"),\n                    item(\"area\"),\n                    item(\"alert\"),\n                ];\n\n                if (subtype !== \"level0\" && subtype != null) {\n                    read.items.push(item(\"opid\"));\n\n                    write = {};\n                    write[\"starting-register\"] = 311;\n                    write.items = [\n                        item(\"operation\"),\n                        item(\"opid\"),\n                    ];\n                }\n\n                if (subtype === \"level2\") {\n                    write.items.push(item(\"on-sec\"));\n                    write.items.push(item(\"start-area\"));\n                    write.items.push(item(\"stop-area\"));\n                } else if (subtype === \"level3\") {\n                    write.items.push(item(\"on-sec\"));\n                    write.items.push(item(\"start-area\"));\n                    write.items.push(item(\"stop-area\"));\n                    write.items.push(item(\"EC\"));\n                    write.items.push(item(\"pH\"));\n                }\n            }\n        }\n\n        if (cls === \"misc\") {\n            if (type === \"display\") {\n                read[\"starting-register\"] = 301;\n                read.items = [\n                    item(\"status\"),\n                    item(\"opid\")\n                ];\n                \n                write = {};\n                write[\"starting-register\"] = 401;\n                write.items = [\n                    item(\"operation\"), \n                    item(\"opid\"),\n                    item(\"epoch\"),\n                    item(\"vfloat\"),\n                    item(\"vint\")\n                ];\n            } else {\n                read = null;\n            }\n            \n        }\n\n        if (read !== null)\n            json.read = read;\n        if (write !== null)\n            json.write = write;\n\n        return json;\n    },\n}\n\nexport default CommSpec;","import CommSpec from './CommSpec';\n\nexport const commSpecVer = \"KS-X-3267:2021\";\n\nexport const operationSpec = [\n    {\n        Class:\"node\",\n        Type:\"sensor-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"actuator-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"actuator-node/level2\",\n        Operations:[\n            {Operation:\"reset\", Value:1},\n            {Operation:\"control\", Value:2, Parameters:[{Parameter:\"control\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"node\",\n        Type:\"integrated-node/level1\",\n        Operations:[{Operation:\"reset\", Value:1}]\n    },\n    {\n        Class:\"node\",\n        Type:\"integrated-node/level2\",\n        Operations:[\n            {Operation:\"reset\", Value:1},\n            {Operation:\"control\", Value:2, Parameters:[{Parameter:\"control\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level0\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level1\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n            {Operation:\"timed-open\", Value:303, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"timed-close\", Value:304, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"retractable/level2\",\n        Operations:[\n            {Operation:\"open\", Value:301},\n            {Operation:\"close\", Value:302},\n            {Operation:\"stop\", Value:0},\n            {Operation:\"timed-open\", Value:303, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"timed-close\", Value:304, Parameters:[{Parameter:\"time\", MO:\"m\", type:\"uint32\"}]},\n            {Operation:\"set-position\", Value:305, Parameters:[{Parameter:\"position\", MO:\"m\", type:\"uint16\"}]},\n            {Operation:\"set-config\", Value:306, Parameters:[\n                {Parameter:\"opentime\", MO:\"m\", type:\"uint16\"},\n                {Parameter:\"closetime\", MO:\"m\", type:\"uint16\"},\n            ]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level0\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level1\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n            {Operation:\"timed-on\", Value:202, Parameters:[{Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"}]},\n        ]\n    },\n    {\n        Class:\"actuator\",\n        Type:\"switch/level2\",\n        Operations:[\n            {Operation:\"on\", Value:201},\n            {Operation:\"off\", Value:0},\n            {Operation:\"timed-on\", Value:202, Parameters:[{Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"}]},\n            {Operation:\"directional-on\", Value:203, Parameters:[\n                {Parameter:\"hold-time\", MO:\"m\", type:\"uint16\"},\n                {Parameter:\"ratio\", MO:\"m\", type:\"int16\"},\n            ]},\n        ]\n    }\n];\n\nexport const deviceClasses = [\n    'node', \n    'sensor',\n    'actuator',\n    //'nutrient-supply',\n    'misc'\n];\n\nexport const deviceTypes = {\n    node:[\n        'sensor-node',\n        'actuator-node',\n        'integrated-node',\n        //'nutrient-supply-node'\n    ],\n    sensor: [\n        'temperature-sensor',\n        'humidity-sensor',\n        'CO2-sensor',\n        'pyranometer-sensor',\n        'wind-direction-sensor',\n        'wind-speed-sensor',\n        'rain-detector-sensor',\n        'quantum-sensor',\n        'soil-moisture-sensor',\n        'tensiometer-sensor',\n        'EC-sensor',\n        'pH-sensor',\n        'soil-temperature-sensor',\n        'flow-sensor',\n        'voltage-sensor',\n        'current-sensor',\n        'rain-gauge-sensor',\n        'weight-sensor'\n    ],\n    actuator: [\n        'retractable',\n        'switch',\n        'nutrient-supply'\n    ],\n    /*nutrient_supply: [\n        'nutrient-supply'\n    ],*/\n    misc: [\n        'display',\n        //'input/trigger'\n    ]\n};\n\nexport function getDeviceTypes(deviceClass) {\n    if (deviceClass == null) return [];\n\n    var key = deviceClass.replace('-', '_');\n\n    var rslt = deviceTypes[key];\n\n    if (rslt === undefined) return [];\n\n    return rslt;\n}\n\nexport const deviceSubTypes = {\n    sensor_node: [\n        'level0',\n        //'level1'\n    ],\n    actuator_node: [\n        'level0',\n        'level1',\n        //'level2'\n    ],\n    integrated_node: [\n        'level0',\n        'level1',\n        //'level2'\n    ],\n    retractable: [\n        'level0',\n        'level1',\n        'level2'\n    ],\n    switch: [\n        'level0',\n        'level1',\n        'level2'\n    ],\n    nutrient_supply: [\n        'level0',\n        'level1',\n        'level2',\n        'level3'\n    ]\n}\n\nexport function getDeviceSubTypes(deviceType) {\n    if (deviceType == null) return [];\n\n    var key = deviceType.replace('-', '_');\n\n    var rslt = deviceSubTypes[key];\n\n    if (rslt === undefined) return [];\n\n    return rslt;\n}\n\nexport const valueUnit = [\n    1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,'etc'\n]\n\nexport const sd = [\n    'None','0',1,2,3,4,5,6,7,8,9,10\n]\n\nexport function getCommSpecItems(json) {\n    var rslt = null;\n    if (json) {\n        var spec = json[commSpecVer];\n        if (spec === undefined && spec === null)\n            return null;\n        \n        rslt = {};\n\n        if (spec.read) {\n            rslt.read = spec.read.items;\n        }\n\n        if (spec.write) {\n            rslt.write = spec.write.items;\n        }\n    }\n\n    return rslt;\n}\n\nexport function getLastSubtype(cls, type) {\n    var fulltype = new String(type);\n    \n    if (fulltype.indexOf('/') > 0) {\n        fulltype = fulltype.split('/')[0];\n        var subs = deviceSubTypes[fulltype.replace('-', '_')];\n        if (subs && subs.length > 0) {\n            return subs[subs.length - 1];\n        }\n\n    } else {\n        return \"\";\n    }\n\n    return \"\";\n}\n\nexport function getCommSpecItemsFull(json) {\n    var rslt = null;\n    if (json) {\n        var cls = json.Class;\n        var type = new String(json.Type);\n\n        var fulltype = getLastSubtype(cls, type);\n\n        if (type.indexOf('/') > 0) {\n            type = type.split('/')[0];\n        }\n\n        var spec = CommSpec.getCommSpec(cls, type, fulltype);\n\n        if (spec === undefined && spec === null)\n            return null;\n        \n        rslt = {};\n\n        if (spec.read) {\n            rslt.read = [];\n            spec.read.items.map((item) => {\n                rslt.read.push(item.item);\n            });\n        }\n\n        if (spec.write) {\n            rslt.write = [];\n            spec.write.items.map((item) => {\n                rslt.write.push(item.item);\n            });\n        }\n    }\n\n    return rslt;\n}\n\nexport function getCommSpecOperation(cls, type) {\n    \n    for(var i=0; i<operationSpec.length; i++) {\n        var op = operationSpec[i];\n\n        if (op.Class === cls && op.Type === type) {\n            return op.Operations;\n        }\n    }\n\n    return null;\n}\n\nexport function getCommSpecOperationFull(cls, type) {\n    var fulltype = new String(type);\n    if (fulltype.indexOf('/') > 0) {\n        fulltype = fulltype.split('/')[0];\n    }\n\n    var sub = getLastSubtype(cls, type);\n    fulltype += '/' + sub;\n\n    for(var i=0; i<operationSpec.length; i++) {\n        var op = operationSpec[i];\n\n        if (op.Class === cls && op.Type === fulltype) {\n            return op.Operations;\n        }\n    }\n\n    return null;\n}\n\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n//import * as Data from './data';\nimport CommSpec from './CommSpec'\nimport './CommSpecComponent.css'\n\nvar placeholder = document.createElement(\"li\");\nplaceholder.className = \"itemM\";\n\nvar key = 0;\n\nexport default class CommSpecComponebt extends Component {\n    state = {\n        readStartingRegister:\"\",\n        writeStartingRegister:\"\",\n        readItems:null,\n        writeItems:null,\n        savedCommSpec:null,\n        refresh:1\n    }\n\n    constructor(props) {\n        super(props);\n        this.commSpec = null;\n        this.result = null;\n    }\n\n    componentDidMount() {\n        this.updateCommSpec();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.cls !== this.props.cls || prevProps.type !== this.props.type || prevProps.subtype !== this.props.subtype) {\n            this.updateCommSpec();\n        }\n    }\n\n    updateCommSpec = () => {\n        this.commSpec = CommSpec.getCommSpec(this.props.cls, this.props.type, this.props.subtype);\n        if (this.commSpec) {\n            this.setState(\n                {\n                    readStartingRegister:this.commSpec.read[\"starting-register\"] || \"\",\n                    writeStartingRegister:this.commSpec.write ? this.commSpec.write[\"starting-register\"] || \"\" : \"\",\n                    readItems:this.commSpec.read.items,\n                    writeItems:this.commSpec.write ? this.commSpec.write.items : null,\n                }\n            , () => {\n                if (this.state.savedCommSpec) {\n                    this.matchCommSpec(this.state.savedCommSpec);\n                }\n                this.props.onChanged();\n            });\n        } else { \n            this.setState(\n                {\n                    readStartingRegister:\"\",\n                    writeStartingRegister:\"\",\n                    readItems:null,\n                    writeItems:null,\n                }\n            , () => {\n                this.props.onChanged();\n            });\n        }\n    }\n\n    getCommSpec = () => {\n        \n        if (!this.commSpec) return null;\n\n        var read = [];\n        var write = [];\n\n        if (this.state.readItems === null) return null;\n\n        this.state.readItems.map((item) => {\n            if (item.mo !== \"x\") {\n                read.push(item.item);\n            }\n\n            return null;\n        });\n\n        if (this.state.readStartingRegister != null && this.state.readStartingRegister > 0) {\n            this.commSpec.read[\"starting-register\"] = this.state.readStartingRegister;\n        } else {\n            this.commSpec.read[\"starting-register\"] = undefined;\n            delete this.commSpec.read[\"starting-register\"];\n        }\n\n        if (this.state.writeItems) {\n            this.state.writeItems.map((item) => {\n                if (item.mo !== \"x\") {\n                    write.push(item.item);\n                }\n\n                return null;\n            });\n        }\n\n        this.commSpec.read.items = read;\n\n        if (this.commSpec.write) {\n            this.commSpec.write.items = write;\n            if (this.state.writeStartingRegister != null && this.state.writeStartingRegister > 0) {\n                this.commSpec.write[\"starting-register\"] = this.state.writeStartingRegister;\n            } else {\n                this.commSpec.write[\"starting-register\"] = undefined;\n                delete this.commSpec.write[\"starting-register\"];\n            }\n        }\n\n        return CommSpec.addOuter(this.commSpec);\n    }\n\n    setCommSpec = (cmspc) => {\n        this.setState({savedCommSpec:cmspc});\n    }\n\n    matchCommSpec = (cmspc) => {\n        if (!cmspc) return;\n\n        var read = cmspc[\"KS-X-3267:2021\"].read;\n        var write = cmspc[\"KS-X-3267:2021\"].write;\n\n        var readitem = null;\n        var writeitem = null;\n\n        if (read) {\n            this.setState({readStartingRegister:read[\"starting-register\"]});\n\n            readitem = [];\n            if (this.state.readItems) {\n                read.items.map((item) => {\n                    var idx = -1;\n\n                    for(var i = 0; i < this.state.readItems.length; i++) {\n                        var it = this.state.readItems[i];\n                        if (it.item === item) {\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    if (idx >= 0) {\n                        readitem.push(this.state.readItems[idx]);\n                    }\n\n                    return null;\n                });\n\n                this.state.readItems.map((item) => {\n                    if (read.items.indexOf(item.item) < 0) {\n                        if (item.mo === \"o\") {\n                            item.mo = \"x\";\n                            readitem.push(item);\n                        }\n                    }\n\n                    return null;\n                });\n            }\n        }\n\n        if (write) {\n            this.setState({writeStartingRegister:write[\"starting-register\"]});\n            \n            writeitem = [];\n            if (this.state.writeItems) {\n                write.items.map((item) => {\n                    var idx = -1;\n\n                    for(var i = 0; i < this.state.writeItems.length; i++) {\n                        var it = this.state.writeItems[i];\n                        if (it.item === item) {\n                            idx = i;\n                            break;\n                        }\n                    }\n\n                    if (idx >= 0) {\n                        writeitem.push(this.state.writeItems[idx]);\n                    }\n\n                    return null;\n                });\n\n                this.state.writeItems.map((item) => {\n                    if (write.items.indexOf(item.item) < 0) {\n                        if (item.mo === \"o\") {\n                            item.mo = \"x\";\n                            writeitem.push(item);\n                        }\n                    }\n\n                    return null;\n                });\n            }\n        }\n\n        this.setState({readItems:readitem, writeItems:writeitem}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    readStartingVal = (val) => {\n        if (val.target.value == null || val.target.value.length <= 0) {\n            this.setState({readStartingRegister:null}, () => {\n                this.props.onChanged();\n            });\n        } else {\n            var parsed = parseInt(val.target.value);\n            if (parsed) {\n                //this.commSpec.read[\"starting-register\"] = parsed;\n                this.setState({readStartingRegister:parsed}, () => {\n                    this.props.onChanged();\n                });\n            }\n        }\n    }\n\n    writeStartingVal = (val) => {\n        if (val.target.value == null || val.target.value.length <= 0) {\n            this.setState({writeStartingRegister:null}, () => {\n                this.props.onChanged();\n            });\n        } else {\n            var parsed = parseInt(val.target.value);\n            if (parsed) {\n                //this.commSpec.read[\"starting-register\"] = parsed;\n                this.setState({writeStartingRegister:parsed}, () => {\n                    this.props.onChanged();\n                });\n            }\n        }\n    }\n\n    optionBtn = (type, item) => {\n        /*if (type === \"read\") {\n            var idx = this.commSpec.read.items.indexOf(item);\n            this.commSpec.read.items[idx].mo = \"m\";\n        }*/\n\n        if (item.mo === \"o\") item.mo = \"x\"\n        else item.mo = \"o\"\n\n        this.setState({refresh:1});\n\n        this.props.onChanged();\n    }\n\n    dragStart = (e) => {\n        this.dragged = e.currentTarget;\n        this.dragged.style.backgroundColor = \"darkgray\";\n\n        e.currentTarget.parentNode.appendChild(placeholder);\n    }\n\n    dragOver = (e) => {\n        e.preventDefault();\n        if (e.target === this.dragged) return;\n        if (e.target.tagName !== \"LI\") return;\n        if (e.target.parentNode !== this.dragged.parentNode) return;\n\n        this.over = e.target;\n\n        e.target.parentNode.insertBefore(this.dragged, e.target);\n    }\n\n    readDragEnd = (e) => {\n        this.dragEnd(this.state.readItems);\n        this.setState({readItems:this.state.readItems}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    writeDragEnd = (e) => {\n        this.dragEnd(this.state.writeItems);\n        this.setState({writeItems:this.state.writeItems}, () => {\n            this.props.onChanged();\n        });\n    }\n\n    dragEnd = (items) => {\n        \n        this.dragged.style.backgroundColor = null;\n        this.dragged.parentNode.removeChild(placeholder);\n\n        if (this.over.dataset.id) {\n            var from = Number(this.dragged.dataset.id);\n            var to = Number(this.over.dataset.id);\n            \n            if(from < to) to--;\n            \n            items.splice(to, 0, items.splice(from, 1)[0]);\n        } else {\n            var item = items[this.dragged.dataset.id];\n            items.splice(this.dragged.dataset.id, 1);\n            items.push(item);\n        }\n    }\n\n    render() {\n\n        \n\n        return (\n            <>\n            {this.commSpec &&\n                <div style={{marginLeft:\"15px\"}}>\n                    <p>CommSpec</p>\n                    <div style={{marginLeft:\"15px\"}}>\n                        <p>read</p>\n                        <div style={{marginLeft:\"15px\"}}>\n                            starting-register\n                            <input style={{marginLeft:\"10px\"}} id=\"read-starting-register\" onChange={this.readStartingVal} value={this.state.readStartingRegister || ''}></input>\n                            {this.state.readItems &&\n                            <ul className=\"list\" onDragOver={this.dragOver}>\n                                {this.state.readItems.map((item, i) => {\n                                    return (\n                                        <li className={item.mo === \"m\" ? \"itemM\" : (item.mo === \"o\" ? \"itemO\" : \"itemX\")} key={key++}\n                                            data-id={i}\n                                            draggable=\"true\"\n                                            onDragStart={this.dragStart}\n                                            onDragEnd={this.readDragEnd}>\n                                            {item.item}\n                                            {item.mo !== \"m\" &&\n                                                //<Button style={{float:\"right\"}} size=\"sm\" variant=\"danger\" onClick={()=> this.optionBtn(\"read\", item)}>X</Button>\n                                                <Button style={{float:\"right\",margin:\"-3px\"}} size=\"sm\" variant={item.mo === \"o\" ? \"danger\" : \"success\"} onClick={()=> {\n                                                    this.optionBtn(\"read\", item)\n                                                }}>{item.mo === \"o\" ? \"X\" : \"O\"}</Button>\n                                            }\n                                        </li>\n                                    )\n                                })}\n                            </ul>}\n                        </div>\n                    </div>\n                    {this.state.writeItems && \n                    <div style={{marginLeft:\"15px\"}}>\n                        <p>write</p>\n                        <div style={{marginLeft:\"15px\"}}>\n                            starting-register\n                            <input style={{marginLeft:\"10px\"}} id=\"write-starting-register\" onChange={this.writeStartingVal} value={this.state.writeStartingRegister || ''}></input>\n                            <ul className=\"list\" onDragOver={this.dragOver}>\n                                {this.state.writeItems.map((item, i) => {\n                                    return (\n                                        <li className={item.mo === \"m\" ? \"itemM\" : (item.mo === \"o\" ? \"itemO\" : \"itemX\")} key={key++}\n                                            data-id={i}\n                                            draggable=\"true\"\n                                            onDragStart={this.dragStart}\n                                            onDragEnd={this.writeDragEnd}>\n                                            {item.item}\n                                            {item.mo !== \"m\" &&\n                                                //<Button style={{float:\"right\"}} size=\"sm\" variant=\"danger\" onClick={()=> this.optionBtn(\"read\", item)}>X</Button>\n                                                <Button style={{float:\"right\",margin:\"-3px\"}} size=\"sm\" variant={item.mo === \"o\" ? \"danger\" : \"success\"} onClick={()=> {\n                                                    this.optionBtn(\"write\", item)\n                                                }}>{item.mo === \"o\" ? \"X\" : \"O\"}</Button>\n                                            }\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                    </div>}\n                </div>\n            }\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport NewWindow from 'react-new-window';\nimport { saveAs } from 'file-saver';\nimport { FileUpload } from 'primereact/fileupload';\n\nexport default class DeviceSpecPopup extends Component {\n    state = {\n        files : null,\n        selectFile : null,\n        fileJson : null,\n        addDeviceMessage : null,\n        errorMsg : true,\n        class : null,\n        canModify : false,\n        canLoad : false,\n    }\n/*\n    constructor(props) {\n        super(props);\n    }\n*/\n    componentDidMount() {\n        this.getFiles();\n        this.setState({canModify:this.props.modify, canLoad:this.props.load});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.show !== this.props.show && this.props.show) {\n            this.getFiles();\n        }\n    }\n\n    setClass = (cls) => {\n        this.setState({class:cls});\n    }\n    \n    getFiles = () => {\n\n        fetch(\"/devicespeclist\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({files:result.files, selectFile : null, fileJson : null});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        );\n    }\n\n    onListSelect = (file) =>{\n        this.setState({selectFile:file});\n\n        fetch(\"/devicespec?file=\" + file, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({fileJson:result.json});\n                }\n            },\n            (error) => {\n                window.alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onFilesUnload = () => {\n        this.setState({files:null, selectFile:null, fileJson:null});\n    }\n\n    onAddDevice = () => {\n\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"추가할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        this.props.onAddDevice(this.state.selectFile, this.state.fileJson);\n\n        //this.state.addDeviceList[this.state.selectFile] = this.state.fileJson;\n        //this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n    onRemoveFile = () =>{\n        \n        if (this.state.selectFile == null) {\n            this.setState({addDeviceMessage:\"삭제할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        fetch(\"/devicespec?file=\" + this.state.selectFile, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 삭제 실패! \" + result.errormsg);\n                } else {\n                    this.getFiles();\n                }\n            },\n            (error) => {\n                alert(\"파일 삭제 실패! \" + error);\n            }\n        )\n    }\n\n    onModify = () => {\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"수정할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        this.props.onModify(this.state.fileJson, this.state.selectFile);\n\n        //this.setJson(this.state.fileJson);\n        //document.getElementById('deviceSpecNameInput').value = this.state.selectFile;\n    }\n\n    onLoad = () => {\n        if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"불러올 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        this.props.onLoad(this.state.fileJson, this.state.selectFile);\n    }\n\n    onDownload = () => {\n        if (!this.state.fileJson || this.state.fileJson.length < 0) {\n            this.setState({addDeviceMessage:\"다운로드할 장비 규격 파일을 선택하세요.\"});\n            console.log(this.state.errorMsg);\n            return;\n        }\n\n        let blob = new Blob([JSON.stringify(this.state.fileJson, null, 4)], {type:'text/plain;charset=utf-8'});\n        saveAs(blob, this.state.selectFile);\n    }\n\n    onUpload = () => {\n        this.setState({errorMsg:false}, () => {\n            console.log(this.state.errorMsg);\n            this.setState({errorMsg:false,addDeviceMessage:\"업로드 성공!\"}, () => {\n                console.log(this.state.errorMsg);\n                this.getFiles();\n                this.setState({errorMsg:true});\n            });\n        });\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onFilesUnload} center={\"parent\"} title={\"장비 규격 파일 불러오기\"} features={{width:800, height:800}}>\n                    <div >\n                    <Container fluid style={{margin:\"10px\"}}>\n                        <Row style={{marginLeft:\"10px\", marginBottom:\"10px\"}}>\n                            <Col></Col>\n                            <Col xs=\"auto\">\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                                    onClick={this.getFiles}>새로고침</Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                { this.state.files && this.state.files.length > 0 ?\n                                    <div className=\"heightPopup\">\n                                        {this.state.files.map((file, idx) => \n                                        <div key={idx}><Button key={idx + \"dvcspc\"} variant={this.state.selectFile === file ? \"primary\" : \"outline-secondary\"} style={{minWidth:\"300px\", textAlign:\"start\", marginBottom:\"1px\"}} onClick={() => this.onListSelect(file)} >{file}</Button><br/></div>\n                                        )}\n                                    </div>\n                                    \n                                /*<ListGroup onSelect={this.onListSelect}>\n                                    {this.state.files.map(file => \n                                        <ListGroup.Item key={itemKey++} eventKey={file} action >{file}</ListGroup.Item>\n                                        )}\n                                </ListGroup>*/ : <div>저장된 파일 없음</div> }\n\n                                \n                            </Col>\n                        \n                            <Col style={{borderLeft:\"5px solid gray\"}}>\n                                <pre className=\"heightPopup\">\n                                    <code>\n                                        {this.state.fileJson && JSON.stringify(this.state.fileJson, null, 4)}\n                                    </code>\n                                </pre>\n                            </Col>\n                        </Row>\n                        \n                        <Row style={{marginTop:\"10px\"}}>\n                            <Col></Col>\n                            <Col xs=\"auto\">\n                                { this.state.class === \"node\" && \n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"120px\", marginRight:\"10px\"}}\n                                onClick={this.onAddDevice}>Device로 추가</Button> }\n                                { this.state.canModify &&\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\", marginRight:\"10px\"}}\n                                onClick={this.onModify}>수정</Button>}\n                                { this.state.canLoad &&\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\", marginRight:\"10px\"}}\n                                onClick={this.onLoad}>불러오기</Button>}\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\", marginRight:\"10px\"}}\n                                onClick={this.onDownload}>다운로드</Button>\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                                onClick={this.onRemoveFile}>삭제</Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                    { this.state.addDeviceMessage && \n                        <div style={{position:\"absolute\", bottom:\"40px\", right:\"10px\", opacity:\"0.95\"}}>\n                        <Alert variant={this.state.errorMsg === false ? \"success\" : \"danger\" } onClose={() => this.setState({addDeviceMessage:null})} dismissible>\n                            {this.state.addDeviceMessage}\n                        </Alert>\n                        </div>\n                    }\n                    <div style={{position:'absolute', bottom:\"10px\", left:\"10px\"}}>\n                        <FileUpload style={{height:\"31px !important\",backgroundColor:'#dddddd  !important'}} mode=\"basic\" name=\"file\" url=\"/devicespec\" accept=\".json\" maxFileSize={1000000} onUpload={this.onUpload} auto chooseLabel=\"업로드\" multiple/>\n                    </div>\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Dropdown, Row, Col, Button, Alert } from 'react-bootstrap';\nimport * as Data from './data'\n//import CommSpec from './CommSpec'\n//import NewWindow from 'react-new-window'\nimport CommSpecComponent from './CommSpecComponent'\nimport DeviceSpecPopup from './DeviceSpecPopup'\n\nexport default class EquipManage extends Component {\n    state = {\n        //files : null,\n        //selectFile : null,\n        //fileJson : null,\n        showFiles : false,\n        //addDeviceMessage : null,\n        class : null,\n        model : null,\n        type : null,\n        subtype : null,\n        name : null,\n        valueunit : null,\n        valueunitetc : null,\n        sd : null,\n        channel : null,\n        deviceSpecName : null,\n        saveAlert : false,\n        saveResult : true,\n        saveErrorMessage : null,\n        overwrite : false,\n        overwriteMessage : false,\n        addDeviceList : {},\n        refresh : null,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.csCmpRef = React.createRef();\n        this.dvcPopRef = React.createRef();\n    }\n\n    setModel = () => {\n        this.setState({model:document.getElementById('modelInput').value});\n    }\n\n    setName = () => {\n        this.setState({name:document.getElementById('nameInput').value});\n    }\n\n    setChannel = () => {\n        this.setState({channel:document.getElementById('channelInput').value});\n    }\n\n    setValueUnitEtc = () => {\n        this.setState({valueunitetc:document.getElementById('valueUnitInput').value});\n    }\n\n    setDeviceSpecName = () => {\n        this.setState({deviceSpecName:document.getElementById('deviceSpecNameInput').value});\n    }\n\n    setSaveMsg = (result, msg) => {\n        this.setState({saveResult:result, saveErrorMessage:msg, saveAlert:true});\n    }\n\n    overwriteClick = () => {\n        this.setState({overwrite:true, overwriteMessage:false, saveAlert:false}, () => {\n            this.saveClick();\n            this.setState({overwrite:false});\n        });\n    }\n\n    onShowFiles = () => {\n        //this.getFiles();\n        this.setState({showFiles:false}, () => {\n            this.setState({showFiles:true});\n        });\n    }\n\n    onModify = (json, name) => {\n        /*if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"수정할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }*/\n\n        this.setJson(json);\n        document.getElementById('deviceSpecNameInput').value = name;\n        this.setDeviceSpecName();\n    }\n\n    onCommSpecChange = () => {\n        this.setState({refresh:null});\n    }\n\n    setJson = (json) => {\n\n        if (json.Class) {\n            this.setState({class:json.Class}, () => {\n                this.csCmpRef.current.setCommSpec(json.CommSpec);\n                this.dvcPopRef.current.setClass(this.state.class);\n            });\n        }\n\n        if (json.Type) {\n            if (json.Type.indexOf('/') > 0) {\n                var types = json.Type.split('/');\n                this.setState({type:types[0], subtype:types[1]});\n            } else {\n                this.setState({type:json.Type, subtype:null});\n            }\n        }\n\n        if (json.Model && json.Model !== \"null\") {\n            this.setState({model:json.Model});\n            document.getElementById('modelInput').value = json.Model;\n        }\n\n        if (json.Name && json.Name !== \"null\") {\n            this.setState({name:json.Name});\n            document.getElementById('nameInput').value = json.Name;\n        }\n\n        if (json.ValueUnit) {\n            if (json.ValueType === \"string\") {\n                this.setState({valueunitetc:json.ValueUnit, valueunit:\"etc\"}, () => {\n                    document.getElementById('valueUnitInput').value = json.ValueUnit;\n                });\n            } else {\n                this.setState({valueunitetc:null, valueunit:json.ValueUnit});\n            }\n        }\n\n        if (json.SignificantDigit !== undefined && json.SignificantDigit !== null) {\n            console.log(json.SignificantDigit);\n            this.setState({sd:json.SignificantDigit});\n        }\n\n        if (json.Channel) {\n            this.setState({channel:json.Channel}, () => {\n                document.getElementById('channelInput').value = json.Channel;\n            });\n        }\n\n        if (json.Devices && json.Devices.length > 0) {\n            var dvclist = {};\n            \n            json.Devices.map((dvc, idx) => {\n                dvclist['tmp' + idx] = dvc;\n            });\n\n            this.setState({addDeviceList:dvclist});\n        }\n    }\n/*\n    onFilesUnload = () => {\n        this.setState({showFiles:false, files:null, selectFile:null, fileJson:null});\n    }\n\n    getFiles = () => {\n\n        fetch(\"/devicespeclist\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({files:result.files});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onListSelect = (file) =>{\n        this.setState({selectFile:file});\n\n        fetch(\"/devicespec?file=\" + file, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({fileJson:result.json});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onRemoveFile = () =>{\n        \n        if (this.state.selectFile == null) {\n            this.setState({addDeviceMessage:\"삭제할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        fetch(\"/devicespec?file=\" + this.state.selectFile, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 삭제 실패! \" + result.errormsg);\n                } else {\n                    this.onShowFiles();\n                }\n            },\n            (error) => {\n                alert(\"파일 삭제 실패! \" + error);\n            }\n        )\n    }\n*/\n    onAddDevice = (name, json) => {\n\n        /*if (this.state.selectFile == null || this.state.fileJson == null) {\n            this.setState({addDeviceMessage:\"추가할 장비 규격 파일을 선택하세요.\"});\n            return;\n        }*/\n\n        this.state.addDeviceList[name] = json;\n        this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n    onRemoveFromDeviceList = (file) => {\n        delete this.state.addDeviceList[file];\n        this.setState({addDeviceList:this.state.addDeviceList});\n    }\n\n\n    saveClick = () => {\n\n        // 문법검사필요\n        // starting register 생략 가능 (노드 제외)\n        if (!this.state.deviceSpecName) {\n            this.setSaveMsg(false, '장비 규격 이름을 입력하세요.');\n            return;\n        }\n\n        fetch(\"/devicespec\", {\n            body: JSON.stringify({\n                name: this.state.deviceSpecName,\n                overwrite: this.state.overwrite,\n                json: this.getJson()}),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result === \"error\") {\n                    this.setSaveMsg(false, result.errormsg);\n                } else if (result.result === \"duplicate\") {\n                    this.state.overwriteMessage = true;\n                    this.setSaveMsg(false, null);\n                } else if (result.result === \"success\") {\n                    this.setSaveMsg(true, result.file);\n                } else {\n                    this.setSaveMsg(false, result.errormsg);\n                }\n            },\n            (error) => {\n                this.setSaveMsg(false, error);\n            }\n        )\n    }\n\n    isSensor = () => {\n        if(this.state.class === 'sensor') return true;\n        else return false;\n    }\n\n    getJson = () => {\n        var json = {};\n        json.Class = this.state.class;\n        json.Type = this.state.type;\n        if (this.state.subtype != null)\n            json.Type += '/' + this.state.subtype;\n\n        if (this.state.model != null && this.state.model.length > 0)\n            json.Model = this.state.model;\n\n        if (this.state.name != null && this.state.name.length > 0)\n            json.Name = this.state.name;\n\n        if (this.isSensor()) {\n            if (this.state.valueunit === 'etc') {\n                json.ValueUnit = this.state.valueunitetc;\n                json.ValueType = \"string\";\n            } else {\n                json.ValueUnit = parseInt(this.state.valueunit);\n                json.ValueType = \"float\";\n            }\n            \n            if (this.state.sd !== 'None' && this.state.sd !== null) {\n                json.SignificantDigit = parseInt(this.state.sd);\n            }\n        }\n\n        if (this.state.class != null) {\n            if (this.state.class !== 'node') {\n                if (this.state.channel !== null && this.state.channel.length > 0) {\n                    var chn = parseInt(this.state.channel);\n                    if (!isNaN(chn)) {\n                        json.Channel = chn;\n                    }\n                }       \n            }\n\n            //json.CommSpec = CommSpec.getCommSpec(this.state.class, this.state.type, this.state.subtype);\n            //if (this.state.commSpec !== null)\n            //    json.CommSpec = this.state.commSpec;\n            if (this.csCmpRef && this.csCmpRef.current) {\n                var cs = this.csCmpRef.current.getCommSpec();\n                if (cs)\n                    json.CommSpec = cs;\n            }\n                \n\n            if (this.state.class === 'node') {\n                if (Object.keys(this.state.addDeviceList).length > 0) {\n                    var devices = [];\n                    Object.keys(this.state.addDeviceList).map((key) => {\n                        devices.push(this.state.addDeviceList[key]);\n                        return null;\n                    });\n\n                    json.Devices = devices;\n                }\n            }\n        }\n        \n        return json;\n    }\n    \n    render() {\n\n        var itemKey = 0;\n\n        return (\n            <>\n                <DeviceSpecPopup \n                    ref={this.dvcPopRef}\n                    show={this.state.showFiles} modify={true}\n                    onModify={this.onModify}\n                    onAddDevice={this.onAddDevice}></DeviceSpecPopup>\n                <Container fluid style={{margin:\"10px\"}}>\n                <Row style={{marginBottom:\"20px\", marginLeft:\"10px\"}}>\n                    <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                        onClick={this.onShowFiles}>장비 규격 파일 검색</Button>\n                </Row>\n                <Row>\n                <Col>\n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col style={{width:\"120px\"}} xs=\"auto\">\n                            Class\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                if (this.state.class !== eventKey) {\n                                    this.setState({type:null, subtype:null, valueunit:null, addDeviceList:{}, commSpec:null}, () => {\n                                        this.csCmpRef.current.setCommSpec(null);\n                                        this.dvcPopRef.current.setClass(this.state.class);\n                                    });\n                                }\n\n                                this.setState({class:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.class == null ? 'Class' : this.state.class}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    { Data.deviceClasses.map(cls => (\n                                        <Dropdown.Item key={itemKey++} eventKey={cls}>{cls}</Dropdown.Item>\n                                    )) }\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n\n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col xs=\"auto\" style={{width:\"120px\"}}>\n                            Type\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.csCmpRef.current.setCommSpec(null);\n                                this.setState({type:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.type == null ? 'Type' : this.state.type }\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    { Data.getDeviceTypes(this.state.class).map(type => (\n                                        <Dropdown.Item key={itemKey++} eventKey={type}>{type}</Dropdown.Item>\n                                    )) }\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.csCmpRef.current.setCommSpec(null);\n                                this.setState({subtype:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.subtype == null ? 'SubType' : this.state.subtype }\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    { Data.getDeviceSubTypes(this.state.type).map(subtype => (\n                                        <Dropdown.Item key={itemKey++} eventKey={subtype}>{subtype}</Dropdown.Item>\n                                    )) }\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n\n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col xs=\"auto\" style={{width:\"120px\"}}>\n                            Model\n                        </Col>\n                        <Col xs=\"auto\">\n                            <input id=\"modelInput\" onKeyUp={this.setModel} ></input>\n                        </Col>\n                    </Row>\n\n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col xs=\"auto\" style={{width:\"120px\"}}>\n                            Name\n                        </Col>\n                        <Col xs=\"auto\">\n                            <input id=\"nameInput\" onKeyUp={this.setName} ></input>\n                        </Col>\n                    </Row>\n                    { this.isSensor() && \n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col style={{width:\"120px\"}} xs=\"auto\">\n                            ValueUnit\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                if (eventKey === 'etc' && this.state.valueunit !== 'etc')\n                                    this.setState({valueunitetc:null});\n\n                                this.setState({valueunit:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.valueunit == null ? 'ValueUnit' : this.state.valueunit}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    { Data.valueUnit.map(cls => (\n                                        <Dropdown.Item key={itemKey++} eventKey={cls}>{cls}</Dropdown.Item>\n                                    )) }\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                        { this.state.valueunit === 'etc' &&\n                            <Col xs=\"auto\">\n                                <input id=\"valueUnitInput\" onKeyUp={this.setValueUnitEtc} ></input>\n                            </Col>\n                        }\n                    </Row> }\n                    { this.isSensor() && \n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col style={{width:\"120px\"}} xs=\"auto\">\n                            SignificantDigit\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.setState({sd:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.sd == null ? 'SD' : this.state.sd}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    { Data.sd.map(cls => (\n                                        <Dropdown.Item key={itemKey++} eventKey={cls}>{cls}</Dropdown.Item>\n                                    )) }\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row> }\n                    { this.state.class !== 'node' && \n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Col xs=\"auto\" style={{width:\"120px\"}}>\n                            Channel\n                        </Col>\n                        <Col xs=\"auto\">\n                            <input id=\"channelInput\" onKeyUp={this.setChannel}></input>\n                        </Col>\n                    </Row> }\n                    \n                    <Row style={{marginBottom:\"10px\"}}>\n                        <CommSpecComponent \n                            ref={this.csCmpRef} \n                            cls={this.state.class} type={this.state.type} subtype={this.state.subtype} onChanged={this.onCommSpecChange}>\n                        </CommSpecComponent>\n                    </Row>\n                    \n                    { this.state.class === 'node' && \n                    <Row style={{marginBottom:\"10px\"}}>\n                        <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                        onClick={this.onShowFiles}>Device 추가</Button>\n                    </Row>\n                    }\n                    { this.state.class === 'node' && Object.keys(this.state.addDeviceList).length > 0 &&\n                        /*<>\n                        {Object.keys(this.state.addDeviceList).map((key, idx) => (\n                            <Row key={idx}>\n                                <Alert variant=\"secondary\" dismissible onClose={()=> this.onRemoveFromDeviceList(key)}>{key}</Alert>\n                            </Row>\n                        ))}\n                        </>*/\n                        <div className=\"heightDevice\">\n                        {Object.keys(this.state.addDeviceList).map((key, idx) => (\n                            <div key={idx}><div style={{width:\"300px\", height:\"33px\", border:\"1px solid gray\", background:\"#e2e2e2\", borderRadius:\"4px\", paddingLeft:\"5px\", marginBottom:\"-20px\"}}>\n                                <p style={{width:\"200px\", display:\"inline\", verticalAlign:\"middle\"}}>{key}</p>\n                                <Button style={{float:\"right\"}} size=\"sm\" variant=\"danger\" onClick={()=> this.onRemoveFromDeviceList(key)}>X</Button>\n                            </div><br/></div>\n                        ))}\n                        </div>\n                    }\n                </Col>\n\n                \n                <Col style={{borderLeft:\"5px solid gray\"}}>\n                    <pre className=\"heightLine\">\n                        <code>\n                            {JSON.stringify(this.getJson(), null, 4)}\n                        </code>\n                    </pre>\n                </Col>\n                </Row>\n                {/*<Row style={{marginTop:\"10px\"}}>\n                    {this.state.saveAlert && \n                        <Alert variant={ this.state.saveResult ? \"success\" : \"danger\" } onClose={() => this.setState({saveAlert:false})} dismissible>\n                            <Alert.Heading>{ this.state.saveResult ? \"파일 저장 성공!\" : \"파일 저장 실패!\" }</Alert.Heading>\n                            {this.state.saveErrorMessage && <p>{this.state.saveErrorMessage}</p>}\n                            {this.state.overwriteMessage && \n                                <>\n                                    <p>동일한 이름의 장비 규격 파일이 있습니다. 덮어쓰시겠습니까?</p>\n                                    <hr/>\n                                    <div className=\"d-flex justify-content-end\">\n                                        <Button style={{marginRight:\"10px\"}} onClick={this.overwriteClick} variant=\"outline-success\">\n                                            예\n                                        </Button>\n                                        <Button onClick={() => {\n                                            this.state.overwriteMessage = false;\n                                            this.setState({saveAlert:false});\n                                            }} variant=\"outline-danger\">\n                                            아니요\n                                        </Button>\n                                    </div>\n                                </>\n                            }\n                        </Alert>\n                    }\n                </Row>*/}\n                <Row style={{marginTop:\"10px\"}}>\n                    <Col xs=\"auto\" style={{width:\"130px\"}}>\n                        장비 규격 이름\n                    </Col>\n                    <Col xs=\"auto\">\n                        <input style={{width:\"400px\"}} id=\"deviceSpecNameInput\" onKeyUp={this.setDeviceSpecName}></input>\n                    </Col>\n                    <Col xs=\"auto\">\n                        <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                        onClick={this.saveClick}>저장</Button>\n                    </Col>\n                </Row>\n            </Container>\n            {this.state.saveAlert && \n                <div style={{position:\"absolute\", bottom:\"70px\", left:\"10px\", opacity:\"0.95\"}}>\n                <Alert variant={ this.state.saveResult ? \"success\" : \"danger\" } onClose={() => this.setState({saveAlert:false})} dismissible>\n                    <Alert.Heading>{ this.state.saveResult ? \"파일 저장 성공!\" : \"파일 저장 실패!\" }</Alert.Heading>\n                    {this.state.saveErrorMessage && <p>{this.state.saveErrorMessage}</p>}\n                    {this.state.overwriteMessage && \n                        <>\n                            <p>동일한 이름의 장비 규격 파일이 있습니다. 덮어쓰시겠습니까?</p>\n                            <hr/>\n                            <div className=\"d-flex justify-content-end\">\n                                <Button style={{marginRight:\"10px\"}} onClick={this.overwriteClick} variant=\"outline-success\">\n                                    예\n                                </Button>\n                                <Button onClick={() => {\n                                    //this.state.overwriteMessage = false;\n                                    this.setState({saveAlert:false, overwriteMessage:false});\n                                    }} variant=\"outline-danger\">\n                                    아니요\n                                </Button>\n                            </div>\n                        </>\n                    }\n                </Alert>\n                </div>\n            }\n            </>            \n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Dropdown, Button, Alert, FormControl } from 'react-bootstrap';\nimport * as Data from './data';\n\nexport default class TestSpec extends Component {\n    state = {\n        command : \"SET\",\n        device : null,\n        deviceList : [],\n        operations:{},\n        targets:{},\n        operation:null,\n        devicespec:null,\n    }\n\n    constructor(props) {\n        super(props);\n        \n        /*if (props.deviceSpec)\n            this.setDeviceSpec(props.deviceSpec, true);*/\n        this.divRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.deviceSpec)\n            this.setDeviceSpec(this.props.deviceSpec, true);\n    }\n\n    componentDidUpdate(prevProps) {\n        \n    }\n\n    setDeviceSpec = (deviceSpec, full = false) => {\n\n        if (deviceSpec) {\n\n            if (Object.equals(deviceSpec, this.state.devicespec)) {\n                console.log('same');\n                return;\n            }\n\n            this.state.devicespec = deviceSpec;\n\n            var dvclist = [];\n            var operation = {};\n            var target = {};\n\n            if (deviceSpec.Class) {\n                dvclist.push(deviceSpec.Class);\n\n                if (deviceSpec.CommSpec) {\n                    var it = null;\n                    if (full) {\n                        it = Data.getCommSpecItemsFull(deviceSpec);\n                    } else {\n                        it = Data.getCommSpecItems(deviceSpec.CommSpec);\n                    }\n\n                    if (it)\n                        target[deviceSpec.Class] = it.read;\n                }\n\n                var op = null;\n                if (full) {\n                    op = Data.getCommSpecOperationFull(deviceSpec.Class, deviceSpec.Type);\n                } else {\n                    op = Data.getCommSpecOperation(deviceSpec.Class, deviceSpec.Type);\n                }\n\n                if (op) {\n                    operation[deviceSpec.Class] = op;\n                }\n            }\n    \n            if (deviceSpec.Devices) {\n                var idx = 0;\n                deviceSpec.Devices.map((dvc) => {\n                    var name = idx++ + \":\" + dvc.Class;\n                    if (dvc.Name) {\n                        name += \":\" + dvc.Name;\n                    }\n                    dvclist.push(name);\n\n                    if (dvc.CommSpec) {\n                        var it = null;\n                        if (full) {\n                            it = Data.getCommSpecItemsFull(dvc);\n                        } else {\n                            it = Data.getCommSpecItems(dvc.CommSpec);\n                        }\n\n                        if (it)\n                            target[name] = it.read;\n                    }\n\n                    var op = null;\n                    if (full) {\n                        op = Data.getCommSpecOperationFull(dvc.Class, dvc.Type);\n                    } else {\n                        op = Data.getCommSpecOperation(dvc.Class, dvc.Type);\n                    }\n                    if (op) {\n                        operation[name] = op;\n                    }\n                });\n            }\n\n            //this.state.deviceList = dvclist;\n            //this.state.operations = operation;\n            //this.state.targets = target;\n            this.setState({deviceList:dvclist, operations:operation, targets:target});\n        }\n    }\n\n    getParameter = () => {\n        if (this.state.command !== \"SET\") return (<></>);\n\n        var ops = this.state.operations[this.state.device];\n\n        if (ops) {\n            for(var i=0; i<ops.length; i++) {\n                var op = ops[i];\n                \n                if (op.Operation === this.state.operation) {\n                    if (op.Parameters) {\n                        return (\n                            //<Row style={{margin:\"10px\"}}>\n                            <div style={{border:\"1px solid gray\", padding:\"10px\", margin:\"10px\"}}>\n                                Parameter\n                                <Row>\n                                { op.Parameters.map((param, idx) => (\n                                    <Col key={idx} xs=\"auto\">\n                                        <Col xs=\"auto\">\n                                            {param.Parameter}\n                                        </Col>\n                                        <Col xs=\"auto\">\n                                            <input id={'param' + idx}></input>\n                                        </Col>\n                                    </Col>\n                                )) }\n                                </Row>\n                            </div>\n                            //</Row>\n                        )\n                    }\n\n                    break;\n                }\n            }\n        }\n        return (<></>);\n    }\n\n    getTarget = () => {\n        if (this.state.command !== \"GET\") return (<></>);\n\n        var tgs = this.state.targets[this.state.device];\n\n        if (tgs) {\n            return (\n                //<Row style={{margin:\"10px\"}}>\n                <div style={{border:\"1px solid gray\", padding:\"10px\", margin:\"10px\"}}>\n                    Target\n                    <Row>\n                    { tgs.map((tg, idx) => (\n                        <Col key={idx} xs=\"auto\">\n                            <Col xs=\"auto\">\n                                <label><input type=\"checkbox\" id={\"target\" + idx}></input>{tg}</label>\n                            </Col>\n                        </Col>\n                    )) }\n                    </Row>\n                </div>\n                //</Row>\n            )\n        }\n        return (<></>);\n    }\n\n    getExpect = () => {\n        if (this.state.command !== \"EXPECT\") return (<></>);\n\n        var tgs = this.state.targets[this.state.device];\n\n        if (tgs) {\n            return (\n                //<Row style={{margin:\"10px\"}}>\n                <div style={{border:\"1px solid gray\", padding:\"10px\", margin:\"10px\"}}>\n                    Target\n                    <Row>\n                    { tgs.map((tg, idx) => (\n                        <Col key={idx} xs=\"auto\">\n                            <Col xs=\"auto\">\n                                <label><input type=\"checkbox\" id={\"expectchk\" + idx}></input>{tg}</label><input style={{width:\"40px\"}} id={\"expect\" + idx}></input>\n                            </Col>\n                        </Col>\n                    )) }\n                    </Row>\n                </div>\n                //</Row>\n            )\n        }\n        return (<></>);\n    }\n\n    onCreate = () => {\n\n        var doc = this.divRef.current.ownerDocument;\n\n        if (!this.state.deviceList || this.state.deviceList.length <= 0) {\n            alert('장비 규격 파일을 불러와야 합니다.');\n            return;\n        }\n\n        var json = {};\n        json.command = this.state.command;\n\n        if (this.state.command === \"SET\") {\n\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            if (!this.state.operation) {\n                alert('OPERATION을 선택해야 합니다.');\n                return;\n            }\n\n            var device = this.state.device;\n            /*if (device.indexOf(\"-\")) {\n                var spl = device.split(\"-\");\n                device = spl[0];\n            }*/\n            json.device = device;\n            json.operation = this.state.operation;\n\n            var ops = this.state.operations[this.state.device];\n\n            if (ops) {\n                for(var i=0; i<ops.length; i++) {\n                    var op = ops[i];\n                    \n                    if (op.Operation === this.state.operation) {\n                        if (op.Parameters) {\n                            json.parameters = [];\n                            for(var j=0; j<op.Parameters.length; j++) {\n                                var param = op.Parameters[j];\n                                \n                                var par = {};\n                                par = Object.assign(par, param);\n                                par = Object.assign(par, {value:doc.getElementById('param' + j).value});\n\n                                if (!par.value && par.MO === 'm') {\n                                    alert('Parameter ' + par.Parameter + '를 입력해야 합니다.');\n                                    return;\n                                }\n\n                                json.parameters.push(par);\n                            }\n                        }\n                    }\n                }\n            }\n        } else if (this.state.command === \"GET\") {\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            json.device = this.state.device;\n            \n            var tgs = this.state.targets[this.state.device];\n\n            if (tgs) {\n                var tgsstr = \"\";\n                for(var i=0; i<tgs.length; i++) {\n                    var tg = tgs[i];\n\n                    var chk = doc.getElementById('target' + i).checked;\n                    if (chk) {\n                        if (tgsstr.length > 0)\n                            tgsstr += \",\";\n                        \n                        tgsstr += tg;\n                    }\n                }\n\n                if (tgsstr.length <= 0) {\n                    alert(\"하나 이상의 Target을 선택해야 합니다.\");\n                    return;\n                }\n\n                json.targets = tgsstr;\n            }\n        } else if (this.state.command === \"EXPECT\") {\n            if (!this.state.device) {\n                alert('DEVICE를 선택해야 합니다.');\n                return;\n            }\n\n            json.device = this.state.device;\n            \n            var tgs = this.state.targets[this.state.device];\n\n            if (tgs) {\n                var tgsstr = \"\";\n                for(var i=0; i<tgs.length; i++) {\n                    var tg = tgs[i];\n\n                    var chk = doc.getElementById('expectchk' + i).checked;\n                    if (chk) {\n                        var val = doc.getElementById('expect' + i).value;\n                        if (!val) {\n                            alert(\"선택한 Target의 값을 입력해야 합니다.\");\n                            return;\n                        }\n\n                        if (tgsstr.length > 0)\n                            tgsstr += \",\";\n                        \n                        tgsstr += tg + \":\" + val;\n                    }\n                }\n\n                if (tgsstr.length <= 0) {\n                    alert(\"하나 이상의 Target을 선택해야 합니다.\");\n                    return;\n                }\n\n                json.targets = tgsstr;\n            }\n        } else if (this.state.command === \"SLEEP\") {\n            var val = doc.getElementById('timeval').value;\n\n            if (!val) {\n                alert(\"시간값을 입력해야 합니다.\");\n                return;\n            }\n\n            json.time = val;\n        }\n\n        this.props.onCreate(json);\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <div style={{height:\"180px\"}} ref={this.divRef}>\n                <Container fluid style={{margin:\"10px\"}}>\n                    <Row style={{marginLeft:\"0px\", marginBottom:\"10px\"}}>\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.setState({command:eventKey});\n                            }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.command}\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item eventKey={\"SET\"}>SET</Dropdown.Item>\n                                    <Dropdown.Item eventKey={\"GET\"}>GET</Dropdown.Item>\n                                    <Dropdown.Item eventKey={\"EXPECT\"}>EXPECT</Dropdown.Item>\n                                    <Dropdown.Item eventKey={\"SLEEP\"}>SLEEP</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                        { this.state.command !== \"SLEEP\" &&\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.setState({device:eventKey, operation:null});\n                            }}>\n                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.device ? this.state.device : \"DEVICE\"}\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {this.state.deviceList.map((dvc, idx) => (\n                                        <Dropdown.Item key={idx} eventKey={dvc}>{dvc}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>}\n                        {/* this.state.command === \"SET\" &&\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" disabled>opid</Button>\n                        </Col>*/}\n                        { this.state.command === \"SET\" &&\n                        <Col xs=\"auto\">\n                            <Dropdown onSelect={(eventKey, event) => {\n                                this.setState({operation:eventKey});\n                            }}>\n                            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    {this.state.operation ? this.state.operation : \"OPERATION\"}\n                                </Dropdown.Toggle>\n                                {this.state.operations[this.state.device] &&\n                                <Dropdown.Menu>\n                                    {this.state.operations[this.state.device].map((op, idx) => (\n                                        <Dropdown.Item key={idx} eventKey={op.Operation}>{op.Operation}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>}\n                            </Dropdown>\n                        </Col>}\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" style={{width:\"80px\"}}\n                                onClick={this.onCreate}>추가</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        { this.getParameter() }\n                    </Row>\n                    <Row>\n                        { this.getTarget() }\n                    </Row>\n                    <Row>\n                        { this.getExpect() }\n                    </Row>\n                    { this.state.command === \"SLEEP\" &&\n                    <Row>\n                        <Col xs=\"auto\">\n                            <Col xs=\"auto\">\n                                Time(ms)\n                            </Col>\n                            <Col xs=\"auto\">\n                                <input id=\"timeval\"></input>\n                            </Col>\n                        </Col>\n                    </Row> }\n                </Container>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Dropdown, Button, Alert, FormControl } from 'react-bootstrap';\nimport NewWindow from 'react-new-window'\nimport * as Data from './data';\nimport TestSpec from './TestSpec'\n\n\nexport default class TestSpecPopup extends Component {\n    state = {\n        deviceSpec:null,\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.testRef = React.createRef();\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate(prevProps) {\n        \n    }\n\n    setDeviceSpec = (deviceSpec) => {\n        this.setState({deviceSpec:deviceSpec});\n    }\n\n    onCreate = (json) => {\n        \n        this.props.onCreate(json);\n    }\n\n    onUnload = () => {\n        this.setState({\n            command : \"SET\",\n            device : null,\n            deviceList : [],\n            operations:{},\n            targets:{},\n            operation:null\n        })\n    }\n\n    /*onMount = () => {\n        if (this.state.deviceSpec && this.testRef.current) {\n            this.testRef.current.setDeviceSpec(this.state.deviceSpec, true);\n        }\n    }*/\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onUnload} center={\"parent\"} title={\"예외요청 추가\"} features={{width:800, height:250}}>\n                    <div>\n                        <TestSpec\n                            ref={this.testRef} onCreate={this.onCreate} deviceSpec={this.state.deviceSpec}\n                            ></TestSpec>\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport NewWindow from 'react-new-window'\n\nexport default class TestSpecListPopup extends Component {\n    state = {\n        files : null,\n        selectFile : null,\n        fileData : null,\n        addDeviceMessage : null,\n    }\n/*\n    constructor(props) {\n        super(props);\n    }\n*/\n    componentDidMount() {\n        this.getFiles();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.show !== this.props.show && this.props.show) {\n            this.getFiles();\n        }\n    }\n\n    getFiles = () => {\n\n        fetch(\"/testspeclist\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({files:result.files, selectFile : null, fileData : null});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onListSelect = (file) =>{\n        this.setState({selectFile:file});\n\n        fetch(\"/testspec?file=\" + file, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 검색 실패! \" + result.errormsg);\n                } else {\n                    this.setState({fileData:result.data});\n                }\n            },\n            (error) => {\n                alert(\"파일 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onLoad = () => {\n        if (this.state.selectFile == null || this.state.fileData == null) {\n            this.setState({addDeviceMessage:\"불러올 장비 규격 파일을 선택하세요.\"});\n            return;\n        }\n\n        this.props.onLoad(this.state.fileData, this.state.selectFile);\n    }\n\n    onFilesUnload = () => {\n        this.setState({files:null, selectFile:null, fileData:null});\n    }\n\n    onRemoveFile = () =>{\n        \n        if (this.state.selectFile == null) {\n            this.setState({addDeviceMessage:\"삭제할 시험파일을 선택하세요.\"});\n            return;\n        }\n\n        fetch(\"/testspec?file=\" + this.state.selectFile, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'DELETE'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"파일 삭제 실패! \" + result.errormsg);\n                } else {\n                    this.getFiles();\n                }\n            },\n            (error) => {\n                alert(\"파일 삭제 실패! \" + error);\n            }\n        )\n    }\n\n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                {this.props.show &&\n                <NewWindow onUnload={this.onFilesUnload} center={\"parent\"} title={\"시험파일 불러오기\"} features={{width:1000, height:800}}>\n                    <div >\n                    <Container fluid style={{margin:\"10px\"}}>\n                        <Row style={{marginLeft:\"10px\", marginBottom:\"10px\"}}>\n                            <Col></Col>\n                            <Col xs=\"auto\">\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                                    onClick={this.getFiles}>새로고침</Button>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                { this.state.files && this.state.files.length > 0 ?\n                                    <div className=\"heightPopup\">\n                                        {this.state.files.map((file, idx) => \n                                        <div key={idx}><Button key={idx + \"dvcspc\"} variant={this.state.selectFile === file ? \"primary\" : \"outline-secondary\"} style={{minWidth:\"200px\", textAlign:\"start\", marginBottom:\"1px\"}} onClick={() => this.onListSelect(file)} >{file}</Button><br/></div>\n                                        )}\n                                    </div>\n                                    \n                                /*<ListGroup onSelect={this.onListSelect}>\n                                    {this.state.files.map(file => \n                                        <ListGroup.Item key={itemKey++} eventKey={file} action >{file}</ListGroup.Item>\n                                        )}\n                                </ListGroup>*/ : <div>저장된 파일 없음</div> }\n\n                                \n                            </Col>\n                        \n                            <Col style={{borderLeft:\"5px solid gray\"}}>\n                                <pre className=\"heightPopup\">\n                                    <code>\n                                        {this.state.fileData && this.state.fileData}\n                                    </code>\n                                </pre>\n                            </Col>\n                        </Row>\n                        \n                        <Row style={{marginTop:\"10px\"}}>\n                            <Col></Col>\n                            <Col xs=\"auto\">\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\", marginRight:\"10px\"}}\n                                onClick={this.onLoad}>불러오기</Button>\n                                <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                                onClick={this.onRemoveFile}>삭제</Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                    { this.state.addDeviceMessage && \n                        <div style={{position:\"absolute\", bottom:\"40px\", right:\"10px\", opacity:\"0.95\"}}>\n                        <Alert variant=\"danger\" onClose={() => this.setState({addDeviceMessage:null})} dismissible>\n                            {this.state.addDeviceMessage}\n                        </Alert>\n                        </div>\n                    }\n                    </div>\n                </NewWindow>}\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NewWindow from 'react-new-window'\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport {InputSwitch} from 'primereact/inputswitch';\nimport './ExcuteTest.css';\n\nexport default class ExcuteTest extends Component {\n    state = {\n        deviceList : [],\n        selectDevice : null,\n        slaveList : [],\n        selectSlave : null,\n        invalidDevice : false,\n        imageURL : null,\n        imageURLDetail : null,\n        isLoading : false,\n        errorMsg : null,\n        detail : false\n    }\n\n    deviceSpec = null;\n    testSpec = null;\n\n    componentDidMount() {\n        let sl = [];\n        for(let i=1; i <= 247; i++ ) {\n            sl.push(i);\n        }\n\n        this.setState({slaveList:sl, selectSlave:1});\n    }\n\n    setSpec = (device, test) => {\n        console.log(device);\n        console.log(test);\n\n        this.deviceSpec = device;\n        this.testSpec = test;\n\n        this.getSerialport();\n    }\n\n    getSerialport = () => {\n        fetch(\"/serialport\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result !== \"success\") {\n                    alert(\"장비 검색 실패! \" + result.errormsg);\n                } else {\n                    //console.log(result.ports);\n                    this.setState({deviceList:result.ports}, () => {\n                        if (this.state.deviceList.length > 0) {\n                            this.setState({selectDevice:this.state.deviceList[0]})\n                        }\n                    });\n                }\n            },\n            (error) => {\n                alert(\"장비 검색 실패! \" + error);\n            }\n        )\n    }\n\n    onChangeDevice = (e) => {\n        this.setState({selectDevice:e.value, invalidDevice:false});\n    }\n\n    onChangeSlave = (e) => {\n        this.setState({selectSlave:e.value});\n    }\n\n    onUnload = () => {\n        this.props.unload();\n\n        this.setState({selectDevice:null, invalidDevice:false, imageURL:null, isLoading:false,errorMsg:null});\n    }\n\n    startTest = () => {\n        if (this.state.selectDevice == null) {\n            this.setState({invalidDevice:true});\n            return;\n        }\n\n        this.setState({isLoading:true,imageURL:null,errorMsg:null});\n\n        fetch(\"/serialport\", {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                path: this.state.selectDevice,\n                device: this.deviceSpec,\n                test: this.testSpec,\n                slave: this.state.selectSlave\n            }),\n            method: 'POST'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({isLoading:false});\n                if (result.result !== \"success\") {\n                    console.log(result);\n                    this.setState({errorMsg:result.errormsg})\n                } else {\n                    this.setState({imageURL:result.url, imageURLDetail:result.urldetail});\n                }\n            },\n            (error) => {\n                this.setState({isLoading:false, errorMsg:error});\n            }\n        )\n    }\n\n    render(){\n        return (\n            <>\n                { this.props.show &&\n                <NewWindow onUnload={this.onUnload} center={\"parent\"} title={\"장비 시험\"} features={{width:800, height:800}} style={{fontSize:\"12px\"}}>\n                    <>\n                        <div className=\"p-grid\" style={{margin:\"20px 10px 10px 10px\",fontSize:\"12px\"}}>\n                            <div className=\"p-col\">\n                                <div className=\"p-field p-fluid\">\n                                    <span className=\"p-float-label\">\n                                        <Dropdown className={this.state.invalidDevice ? \"p-invalid p-mr-2\" : null} value={this.state.selectDevice} options={this.state.deviceList} onChange={this.onChangeDevice}></Dropdown>\n                                        <label htmlFor=\"dropdown\">장비 선택</label>\n                                    </span>\n                                    {\n                                        this.state.invalidDevice &&\n                                        <small id=\"username-help\" className=\"p-invalid\">장비를 선택해야 합니다.</small>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"p-col\">\n                                <span className=\"p-float-label\">\n                                    <Dropdown value={this.state.selectSlave} options={this.state.slaveList} onChange={this.onChangeSlave}></Dropdown>\n                                    <label htmlFor=\"dropdown\">Slave</label>\n                                </span>\n                            </div>\n                            <div className=\"p-col\">\n                                <Button className=\"p-button-secondary\" label=\"시험 시작\" onClick={this.startTest}></Button>\n                            </div>\n                        </div>\n                        <div className=\"p-grid\" style={{margin:\"0px 10px 10px 20px\"}}>\n                            <h6 style={{marginRight:\"10px\"}}>상세보기</h6>\n                            <InputSwitch checked={this.state.detail} onChange={(e) => this.setState({detail:e.value})}/>\n                        </div>\n                        <div className=\"p-grid p-justify-center result-area\">\n                            <div className=\"p-col-align-center\">\n                                {this.state.isLoading &&\n                                    <ProgressSpinner/>}\n                                { (this.state.detail && this.state.imageURLDetail ) &&\n                                        <img alt=\"이미지 불러오기 실패!\" src={this.state.imageURLDetail}/>}\n                                { (!this.state.detail && this.state.imageURL ) &&\n                                    <img alt=\"이미지 불러오기 실패!\" src={this.state.imageURL}/>}\n                                {this.state.errorMsg &&\n                                    <h3>시험 실패!<br/>{this.state.errorMsg}</h3>\n                                }\n                            </div>\n                        </div>\n                    </>\n                </NewWindow>\n                }\n            </>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport DeviceSpecPopup from './DeviceSpecPopup'\nimport TestSpecPopup from './TestSpecPopup'\nimport TestSpecListPopup from './TestSpecListPopup'\nimport TestSpec from './TestSpec'\nimport './SequenceManage.css'\nimport ExcuteTest from \"./ExcuteTest\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nexport default class SequenceManage extends Component {\n    state = {\n        showFiles : false,\n        showTestFiles : false,\n        loadJson : null,\n        loadFile : null,\n        showCreate : false,\n        showTest : false,\n        tests : [],\n        saveAlert : false,\n        saveResult : false,\n        overwrite : false,\n        saveErrorMessage : null,\n        overwriteMessage : null,\n        rowSelected : null\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.dvcPopRef = React.createRef();\n        this.testRef = React.createRef();\n        this.testListRef = React.createRef();\n        this.testPopRef = React.createRef();\n        this.excuteTestRef = React.createRef();\n    }\n\n    onShowFiles = () => {\n        //this.getFiles();\n        this.setState({showFiles:false}, () => {\n            this.setState({showFiles:true});\n        });\n    }\n\n    onShowTestFiles = () => {\n        //this.getFiles();\n        this.setState({showTestFiles:false}, () => {\n            this.setState({showTestFiles:true});\n        });\n    }\n\n    onLoad = (json, name) => { \n        this.setState({loadJson:json, loadFile:name, showFiles:false});\n        this.testRef.current.setDeviceSpec(json);\n    }\n\n    onTestLoad = (data, name) => { \n        var datas = data.split(\"\\n\");\n        var tests = []\n        datas.map((test,id) => {\n            if (test.trim().length > 0)\n                tests.push({id:id,test:test});\n        });\n\n        document.getElementById('testSpecNameInput').value = name;\n        this.setState({tests:tests, showTestFiles:false});\n        //this.testRef.current.setDeviceSpec(json);\n    }\n\n    onCreateTest = () => {\n\n        if (this.state.loadFile === null) {\n            alert('장비 규격 파일을 불러와야 합니다.');\n            return;\n        }\n\n        this.setState({showCreate:false}, () => {\n            this.testPopRef.current.setDeviceSpec(this.state.loadJson, true);\n            this.setState({showCreate:true});\n        });\n    }\n\n    setSaveMsg = (result, msg) => {\n        this.setState({saveResult:result, saveErrorMessage:msg, saveAlert:true});\n    }\n\n    overwriteClick = () => {\n        this.setState({overwrite:true, overwriteMessage:false, saveAlert:false}, () => {\n            this.saveClick();\n            this.setState({overwrite:false});\n        });\n        \n        \n    }\n\n    getTestSpec = () => {\n        /*var testSpec = \"\";\n\n        this.state.tests.map((test, idx) => {\n            testSpec += test + \"\\n\";\n        });\n\n        return testSpec;*/\n        return this.state.tests;\n    }\n\n    saveClick = () => {\n        var testSpecName = document.getElementById('testSpecNameInput').value;\n        if (!testSpecName) {\n            this.setSaveMsg(false, '시험파일 이름을 입력하세요.');\n            return;\n        }\n\n        let testSpec = this.getTestSpec();\n\n        if (!testSpec || testSpec.length <= 0) {\n            this.setSaveMsg(false, '저장할 시험파일 내용이 없습니다.');\n            return;\n        }\n\n        fetch(\"/testspec\", {\n            body: JSON.stringify({\n                name: testSpecName,\n                overwrite: this.state.overwrite,\n                data: testSpec}),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'PUT'\n        }).then(res => res.json())\n        .then(\n            (result) => {\n                if (result.result === \"error\") {\n                    this.setSaveMsg(false, result.errormsg);\n                } else if (result.result === \"duplicate\") {\n                    this.state.overwriteMessage = true;\n                    this.setSaveMsg(false, null);\n                } else if (result.result === \"success\") {\n                    this.setSaveMsg(true, result.file);\n                } else {\n                    this.setSaveMsg(false, result.errormsg);\n                }\n            },\n            (error) => {\n                this.setSaveMsg(false, error);\n            }\n        )\n    }\n\n    onCreate = (json) => {\n        if (!json) return;\n        //console.log(json);\n        var cmd = json.command + \" \";\n        if (json.command === \"SET\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n            cmd += \"OPERATION=\" + json.operation;\n\n            if (json.parameters && json.parameters.length > 0) {\n                var paramstr = \"\";\n                for(var i=0; i<json.parameters.length; i++) {\n                    var param = json.parameters[i];\n\n                    if (param.value) {\n                        if (paramstr.length > 0) \n                            paramstr += \",\";\n                        paramstr += param.Parameter;\n                        paramstr += \":\" + param.value;\n                    }\n                }\n\n                if (paramstr.length > 0) \n                    cmd += \" PARAMETER=\" + paramstr;\n            }\n        } else if (json.command === \"GET\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n\n            if (json.targets) {\n                cmd += \"TARGET=\" + json.targets;\n            }\n        } else if (json.command === \"EXPECT\") {\n            cmd += \"DEVICE=\" + json.device + \" \";\n\n            if (json.targets) {\n                cmd += \"TARGET=\" + json.targets;\n            }\n        } else if (json.command === \"SLEEP\") {\n            cmd += \"TIME=\" + json.time; \n        }\n\n        this.state.tests.push({id:this.state.tests.length,test:cmd});\n        this.setState({tests:this.state.tests});\n        \n    }\n\n    testClick = () => {\n        if (this.state.loadFile === null) {\n            alert('장비 규격 파일을 불러와야 합니다.');\n            return;\n        }\n\n        let testSpec = this.getTestSpec();\n\n        if (!testSpec || testSpec.length <= 0) {\n            alert('시험할 내용이 없습니다.');\n            return;\n        }\n\n        this.setState({showTest:true}, () => {\n            this.excuteTestRef.current.setSpec(this.state.loadJson, testSpec);\n        });\n    }\n\n    testUnload = () => {\n        this.setState({showTest:false});\n    }\n\n    onRowReorder = (e) => {\n        if (this.state.rowSelected == null) {\n            this.setState({tests:e.value});\n        } else {\n            let mvitem = [];\n            let mvid = [];\n\n            this.state.rowSelected.map((item) => {\n                mvid.push(item.id);\n            });\n\n            this.state.tests.map((item) => {\n               if (mvid.indexOf(item.id) >= 0) {\n                   mvitem.push({id:item.id, test:String(item.test)});\n                   item.test = '!@!@!';\n               }\n            });\n\n            for(let i=mvitem.length - 1; i>=0; i--) {\n                this.state.tests.splice(e.dropIndex, 0, mvitem[i]);\n            }\n\n            for(let i=this.state.tests.length - 1; i>=0; i--) {\n                if (this.state.tests[i].test === '!@!@!') {\n                    this.state.tests.splice(i, 1);\n                }\n            }\n\n            this.setState({tests:this.state.tests, rowSelected:null});\n        }\n    }\n\n    onSelectCopy = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) return;\n\n        let mvid = [];\n        let mvitem = [];\n\n        this.state.rowSelected.map((item) => {\n            mvid.push(item.id);\n        });\n\n        let idx = this.state.tests.length;\n\n        this.state.tests.map((item) => {\n            if (mvid.indexOf(item.id) >= 0) {\n                mvitem.push({id:idx++, test:String(item.test)});\n            }\n        });\n\n        mvitem.map((item) => {\n           this.state.tests.push(item);\n        });\n\n        this.setState({tests:this.state.tests});\n    }\n\n    /*onSelectEdit = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) {\n            alert('수정할 항목을 선택하세요.');\n            return;\n        }\n\n        if (this.state.rowSelected.length > 1) {\n            alert('하나의 항목만 선택하세요.');\n            return;\n        }\n\n\n    }*/\n\n    onSelectDelete = () => {\n        if (this.state.rowSelected == null || this.state.rowSelected.length <= 0) return;\n\n        let mvid = [];\n        let mvitem = [];\n\n        this.state.rowSelected.map((item) => {\n            for(let i=this.state.tests.length - 1; i>=0; i--) {\n                if (this.state.tests[i].id == item.id) {\n                    this.state.tests.splice(i, 1);\n                    break;\n                }\n            }\n        });\n\n        this.setState({tests:this.state.tests});\n    }\n\n    testEditor = (props) => {\n        return <InputText style={{width:\"100%\"}} type=\"text\" value={props.rowData['test']} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    onEditorValueChange = (props, value) => {\n        this.state.tests[props.rowIndex].test = value;\n        this.setState({tests:this.state.tests});\n    }\n    \n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            <>\n                <ExcuteTest\n                    ref={this.excuteTestRef}\n                    show={this.state.showTest}\n                    unload={this.testUnload}\n                ></ExcuteTest>\n                <DeviceSpecPopup \n                    ref={this.dvcPopRef}\n                    show={this.state.showFiles} load={true} onLoad={this.onLoad}\n                    ></DeviceSpecPopup>\n                <TestSpecListPopup \n                    ref={this.testListRef}\n                    show={this.state.showTestFiles} onLoad={this.onTestLoad}\n                    ></TestSpecListPopup>\n                <TestSpecPopup\n                    ref={this.testPopRef}\n                    show={this.state.showCreate} onCreate={this.onCreate}></TestSpecPopup>\n                <Container fluid style={{margin:\"10px\"}}>\n                    <Row style={{margin:\"10px\"}}>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                onClick={this.onShowFiles}>장비 규격 파일 불러오기</Button>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                onClick={this.onShowTestFiles}>시험 파일 불러오기</Button>\n                        </Col>\n                        <Col>\n                            {this.state.loadFile}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <TestSpec\n                            ref={this.testRef} onCreate={this.onCreate}\n                        ></TestSpec>\n                    </Row>\n                    <Row style={{margin:\"10px\"}}>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                onClick={this.onCreateTest}>예외요청 생성</Button>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                    onClick={this.onSelectCopy}>선택항목 복사</Button>\n                        </Col>\n                        {/*<Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                    onClick={this.onSelectEdit}>선택항목 수정</Button>\n                        </Col>*/}\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"200px\"}}\n                                    onClick={this.onSelectDelete}>선택항목 삭제</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <div className=\"grid\">\n                            <DataTable value={this.state.tests} editMode=\"cell\" className=\"p-datatable-sm editable-cells-table\"\n                                       onRowReorder={this.onRowReorder}\n                                       selectionMode=\"multiple\" dataKey=\"id\" selection={this.state.rowSelected} onSelectionChange={e => this.setState({rowSelected:e.value})}>\n                                <Column rowReorder style={{width:'3em'}}></Column>\n                                <Column key='id' columnKey='test' field='test' editor={(props) => this.testEditor(props)}></Column>\n                            </DataTable>\n                            {/*this.state.tests.map((test, idx) => (\n                                <div className=\"testitem\" key={idx}>\n                                    <p>{test}</p>\n                                </div>\n                            ))*/}\n                        </div>\n                    </Row>\n                    <Row style={{marginTop:\"10px\"}}>\n                        <Col xs=\"auto\" style={{width:\"130px\"}}>\n                            시험파일 이름\n                        </Col>\n                        <Col xs=\"auto\">\n                            <input style={{width:\"400px\"}} id=\"testSpecNameInput\"></input>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                            onClick={this.saveClick}>저장</Button>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button variant=\"secondary\" size=\"sm\" style={{width:\"100px\"}}\n                                    onClick={this.testClick}>장비 시험</Button>\n                        </Col>\n                    </Row>\n                </Container>\n                {this.state.saveAlert && \n                <div style={{position:\"absolute\", bottom:\"50px\", left:\"10px\", opacity:\"0.95\"}}>\n                <Alert variant={ this.state.saveResult ? \"success\" : \"danger\" } onClose={() => this.setState({saveAlert:false})} dismissible>\n                    <Alert.Heading>{ this.state.saveResult ? \"파일 저장 성공!\" : \"파일 저장 실패!\" }</Alert.Heading>\n                    {this.state.saveErrorMessage && <p>{this.state.saveErrorMessage}</p>}\n                    {this.state.overwriteMessage && \n                        <>\n                            <p>동일한 이름의 장비 규격 파일이 있습니다. 덮어쓰시겠습니까?</p>\n                            <hr/>\n                            <div className=\"d-flex justify-content-end\">\n                                <Button style={{marginRight:\"10px\"}} onClick={this.overwriteClick} variant=\"outline-success\">\n                                    예\n                                </Button>\n                                <Button onClick={() => {\n                                    //this.state.overwriteMessage = false;\n                                    this.setState({saveAlert:false, overwriteMessage:false});\n                                    }} variant=\"outline-danger\">\n                                    아니요\n                                </Button>\n                            </div>\n                        </>\n                    }\n                </Alert>\n                </div>\n            }\n            </>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport EquipManage from './EquipManage'\nimport SequenceManage from './SequenceManage'\n\n\nexport default class Router extends Component {\n    \n    render() {\n        //const rtc = this.props.route.params.RtcConnect;\n        return (\n            \n                <>\n                    <Switch>\n                        <Route path=\"/equip\" exact component={EquipManage}/>\n                        <Route path=\"/sequence\" exact component={SequenceManage}/>\n                        <Redirect from=\"*\" to=\"/equip\" />\n                    </Switch>\n                </>\n          );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap'\n\n//export default withRouter(({ location : {pathname}} ) => (\n    export default () => (\n    /*<header className=\"nav\" style={{backgroundColor:'#353535'}}>\n        <ul>\n            <div className=\"navheader\">\n                <li>\n                    <a href=\"/\">ETRI SmartFarm</a>\n                </li>\n            </div>\n            <div className={pathname === \"/equip\" ? \"navcurrent\" : \"nav\" }>\n                <li>\n                    <a href=\"/equip\">장비 규격 관리</a>\n                </li>\n            </div>\n            <div className={pathname === \"/sequence\" ? \"navcurrent\" : \"nav\" }>\n                <li>\n                    <a href=\"/sequence\">시험 규격 관리</a>\n                </li>\n            </div>\n        </ul>\n    </header>*/\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n        <Navbar.Brand href=\"/equip\">ETRI SmartFarm</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/equip\">장비 규격 관리</Nav.Link>\n            <Nav.Link as={Link} to=\"/sequence\">시험 규격 관리</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n);","import React, { Component } from 'react';\nimport Router from './Router';\nimport Header from './Header';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <>\n          <Header/>\n          <Router/>\n        </>\n      </BrowserRouter>\n    ); \n  }\n}\n\nObject.equals = function(x, y) { \n  if (x === y) return true;\n  // if both x and y are null or undefined and exactly the same \n  if (!(x instanceof Object) || !(y instanceof Object)) return false; // if they are not strictly equal, they both need to be Objects \n  if (x.constructor !== y.constructor) return false; // they must have the exact same prototype chain, the closest we can do is // test there constructor. \n  for (var p in x) { \n      if (!x.hasOwnProperty(p)) continue; \n      // other properties were tested using x.constructor === y.constructor \n      if (!y.hasOwnProperty(p)) return false; \n      // allows to compare x[ p ] and y[ p ] when set to undefined \n      if (x[p] === y[p]) continue; \n      // if they have the same strict value or identity then they are equal \n      if (typeof(x[p]) !== \"object\") return false; \n      // Numbers, Strings, Functions, Booleans must be strictly equal \n      if (!Object.equals(x[p], y[p])) return false; \n      // Objects and Arrays must be tested recursively \n  } \n  \n  for (p in y) { \n      if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false; \n      // allows x[ p ] to be set to undefined \n  }\n  \n  return true; \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}